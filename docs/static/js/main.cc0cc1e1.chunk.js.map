{"version":3,"sources":["components/DataForm.js","constants.js","components/ChartView.js","components/ProjectTable.js","utils.js","components/ProjectView.js","functions/utils.js","App.js","store/actions/index.js","store/action-types.js","store/reducers/index.js","store/reducers/category.js","store/reducers/ticket-state.js","store/index.js","index.js"],"names":["DataForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","compareToStartDate","rule","value","callback","form","getFieldValue","compareToEndDate","state","fileList","startStatistic","bind","assertThisInitialized","_this2","Promise","resolve","reject","validateFields","err","values","_this3","validateForm","then","startTime","Date","set","hour","minute","second","endTime","onStart","catch","_this4","getFieldDecorator","react_default","a","createElement","es_form","layout","row","es_col","span","Item","label","labelCol","wrapperCol","rules","required","message","upload","accept","multiple","beforeUpload","file","setState","_ref","toConsumableArray","concat","onRemove","_ref2","index","indexOf","newFileList","slice","splice","es_button","validator","date_picker","offset","loading","type","onClick","React","Component","defaultPorps","onExport","WrapDataForm","create","KEY_REPORT_TIME","KEY_PROJECT_NAME","KEY_SECOND_CATEGORY","KEY_STATISTIC_ITEM","KEY_TICKET_TOTAL","DEFAULT_SECOND_CATEGORIES","NEW_ADD_CLOSE_RATE","REMAIN_CLOSE_RATE","OVERALL_CLOSE_RATE","CLOSE_ON_TIME_RATE","TOTAL_OVERALL_CLOSE_RATE","RATE_STATISTIC_ITEMS","COL_AREA","COL_CITY_COMPANY","COL_PROJECT","COL_PROJECT_STAGE","COL_CURRENT_STATUS","COL_FIRST_CLASS","COL_REPORT_TIME","CATEGORY_UNCLASSIFY","TICKET_STATUS","CATEGORIES","STATISTIC_ITEMS","ChartView","titleConfig","left","top","textStyle","color","toolboxConfig","feature","saveAsImage","show","right","legendConfig","styles","height","citySecondCategoryCloseAverageHandleTimeSeries","newAddedCities","cityName","citySecondCategoryCloseAverageHandleTimeData","name","barMaxWidth","position","formatter","data","citySecondCategoryOpenAverageHandleTimeSeries","openAverageHandleTimeCities","citySecondCategoryOpenAverageHandleTimeData","style","margin","core_default","echarts","option","title","objectSpread","text","tooltip","trigger","axisPointer","crossStyle","toolbox","xAxis","cities","yAxis","min","max","series","cityTotalAcceptData","yAxisIndex","cityOverallCloseRateData","projects","interval","axisLabel","rotate","projectTotalAcceptData","projectOverallCloseRateData","stages","stageTotalAcceptData","stageOverallCloseRateData","radius","cityOpenData","secondCategoryOpenData","cityNewAddedAcceptData","cityNewAddedCloseRateData","newAddedProjects","projectNewAddedAcceptData","projectNewAddedCloseRateData","newAddedStages","stageNewAddedAcceptData","stageNewAddedCloseRateData","secondCategoryNewAddedAcceptData","legend","cityNeedHandleAcceptData","cityNeedHandleCloseOnTimeRateData","cityNeedHandleCloseRateData","needHandleProjects","projectNeedHandleAcceptData","projectNeedHandleCloseOnTimeRateData","projectNeedHandleCloseRateData","cityCloseAverageHandleTimeData","cityOpenAverageHandleTimeData","ProjectTable","projectColumn","table","Column","dataIndex","key","width","otherColumns","map","item","currentPageData","dataSource","filteredProjects","length","filter","pagination","pageSize","scroll","y","size","defaultProps","formatToTable","tableData","rowKey","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","statisticItem","rowData","_arr","_i","category","push","return","formatToRateTable","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_arr2","_i2","ProjectView","filterProjects","projectName","es_select","mode","onChange","project","Option","components_ProjectTable","periodNewAddedResult","thisYearbeforePeriodResult","thisYearBeforePeriodTotalResult","thisYearTotalResult","lastYearBeforePeriodResult","lastYearBeforePeriodTotalResult","beforePeriodNeedHandleResult","periodTotalResult","rateResult","initStatisticItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","itemName","initRate","getCategory","ticket","statisticPeriodNewAddedTickets","tickets","closeStartTime","closeEndTime","col","dataMap","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ticketCategory","ticketStatistic","ticketStatus","ticketReportTime","moment","ticketPauseDuration","Number","ticketCloseTime","duration","diff","subtract","as","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","ticketCloseCount","ticketCloseProcessTime","toFixed","ticketOpenProcessTime","ticketOpenCount","statisticThisYearBeforePeriodTickets","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","statisticThisYearBeforePeriodTotalTickets","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","statisticLastYearBeforePeriodTickets","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","statisticLastYearBeforePeriodTotalTickets","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","statisticThisYearTotalTickets","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","statisticBeforePeriodNeedHandleResult","array","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","result","_arr4","_i4","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","statisticPeriodTotalResult","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_arr5","_i5","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","statisticRate","statisticMap","rateMap","_arr6","_i6","allCategory","allTicketState","App","start","_this$props","addCategories","addTicketStates","fileReader","FileReader","readFile","onload","event","workbook","XLSX","read","target","sheet","Sheets","SheetNames","utils","sheet_to_json","blankrows","readAsBinaryString","readExcelData","yearStartTime","month","date","periodTickets","beforePeriodTickets","thisYearTotalTickets","reportTime","lastYearBeforePeriodTickets","stageData","Util","thisYearBeforePeriodResult","projectData","cityData","areaData","periodNewAddedData","thisYearBeforePeriodData","thisYearBeforePeriodTotalData","thisYearTotalData","lastYearBeforePeriodData","lastYearBeforePeriodTotalData","beforePeriodNeedHandleData","periodTotalData","rateData","tabChart","components_ChartView","secondCategoryOpenAverageHandleTimeData","tabArea","components_ProjectView","tabCity","tabProject","tabStage","locale_provider","locale","zh_CN","className","components_DataForm","exportExcel","tabs","TabPane","tab","mapDispatchToProps","categories","payload","ticketStates","ConnectedApp","connect","reducer","combineReducers","arguments","action","ticketState","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cc0cc1e1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, Upload, Button, DatePicker } from 'antd';\n\nclass DataForm extends React.Component {\n  static defaultPorps = {\n    onStart: () => {},\n    onExport: () => {}\n  }\n  static propTypes = {\n    onStart: PropTypes.func,\n    onExport: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: []\n    };\n    this.startStatistic = this.startStatistic.bind(this);\n  }\n\n  validateForm() {\n    return new Promise((resolve, reject) => {\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          resolve();\n        } else {\n          reject();\n        }\n      })\n    });\n  }\n\n  startStatistic() {\n    this.validateForm().then(() => {\n      const form = this.props.form;\n      let startTime = new Date(form.getFieldValue('startDate').set({ hour: 0, minute: 0, second: 0 }));\n      let endTime = new Date(form.getFieldValue('endDate').set({ hour: 23, minute: 59, second: 59 }));\n      this.props.onStart(this.state.fileList, startTime, endTime);\n    }).catch(() => {});\n  }\n\n  compareToStartDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value < form.getFieldValue('startDate')) {\n      callback('结束时间应大于开始时间!');\n    } else {\n      callback();\n    }\n  }\n\n  compareToEndDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value > form.getFieldValue('endDate')) {\n      callback('开始时间应小于结束时间!');\n    } else {\n      callback();\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"horizontal\">\n        <Row>\n          <Col span={12}>\n            <Form.Item\n              label=\"请选择文件\"\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n            >\n              {\n                getFieldDecorator('files', {\n                  rules: [{ required: true, message: '请选择要统计的文件!' }]\n                })(\n                  <Upload\n                    accept=\".xls,xlsx\"\n                    multiple\n                    fileList={this.state.fileList}\n                    beforeUpload={(file) => {\n                      this.setState(({ fileList }) => {\n                        return { fileList : [...fileList, file] };\n                      });\n                      return false;\n                    }}\n                    onRemove={(file) => {\n                      this.setState(({ fileList }) => {\n                        const index = fileList.indexOf(file);\n                        const newFileList = fileList.slice();\n                        newFileList.splice(index, 1);\n                        return {\n                          fileList: newFileList\n                        };\n                      });\n                    }}\n                  >\n                    <Button>支持文件格式: .xls, .xlsx</Button>\n                  </Upload>\n                )\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Form.Item\n              label='统计周期开始时间'\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('startDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期开始时间' },\n                    { validator: this.compareToEndDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              label=\"统计周期结束时间\"\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('endDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期结束时间' },\n                    { validator: this.compareToStartDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col offset={4}>\n            <Button loading={this.props.loading} type=\"primary\" onClick={this.startStatistic}>\n              {\n                this.props.loading ? '正在统计...': '开始统计'\n              }\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nconst WrapDataForm = Form.create()(DataForm);\n\nexport default WrapDataForm;\n","// statistic items\r\nexport const TICKET_SYSTEM_COUNT = '系统单数';\r\nexport const TICKET_ACCEPT = '受理';\r\nexport const TICKET_OPEN = '剩余未关';\r\nexport const TICKET_VALIDATE = '待复验';\r\nexport const TICKET_PAUSE = '暂停处理';\r\nexport const TICKET_INVALID = '无效';\r\nexport const TICKET_CLOSE = '关闭';\r\nexport const TICKET_CLOSE_NORMAL = '正常关闭';\r\nexport const TICKET_CLOSE_ABNORMAL = '非正常关闭';\r\nexport const TICKET_CLOSE_ON_TIME = '及时关闭';\r\nexport const TICKET_RESPONSE_IN_30_MIN = '响应及时单（0.5h）';\r\nexport const TICKET_RESPONSE_IN_30_HOUR = '响应及时单（30h）';\r\nexport const TICKET_CLOSE_PROCESS_TIME = '已关时长（天）';\r\nexport const TICKET_OPEN_PROCESS_TIME = '未关时长（天）';\r\nexport const TICKET_NOT_RESPONSED = '未响应';\r\n\r\nexport const DEFAULT_STATISTIC_ITEMS = [\r\n  TICKET_SYSTEM_COUNT,\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_VALIDATE,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_RESPONSE_IN_30_MIN,\r\n  TICKET_RESPONSE_IN_30_HOUR,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME\r\n];\r\n\r\n// data key\r\nexport const KEY_REPORT_TIME = '报事时间';\r\nexport const KEY_PROJECT_NAME = '项目';\r\nexport const KEY_SECOND_CATEGORY = '二级分类';\r\nexport const KEY_TICKET_STATUS = '工单状态';\r\nexport const KEY_IS_PROCESS_EXCCED = '是否超期处理';\r\nexport const KEY_FIRST_RESPONSE_TIME = '首次响应时长';\r\nexport const KEY_PROCESS_TIME = '处理时长';\r\nexport const KEY_CLOSE_TIME = '实际关闭时间';\r\nexport const KEY_STATISTIC_ITEM = '统计项目';\r\nexport const KEY_TICKET_TOTAL = '合计';\r\nexport const KEY_CITY_NAME = '城市';\r\n\r\n// all second categories\r\nexport const DEFAULT_SECOND_CATEGORIES = [\r\n  '墙地面及天棚',\r\n  '渗漏',\r\n  '门窗',\r\n  '强弱电',\r\n  '给排水',\r\n  '厨房设备',\r\n  '卫生设备',\r\n  '制冷设备',\r\n  '固装精装部品',\r\n  '公共区域',\r\n  '其他'\r\n];\r\n\r\nexport const NEW_ADD_CLOSE_RATE = '新增关闭率';\r\nexport const REMAIN_CLOSE_RATE = '遗留关闭率';\r\nexport const OVERALL_CLOSE_RATE = '总体关闭率';\r\nexport const RESPONSE_IN_30_MIN_RATE = '响应及时率（0.5h）'\r\nexport const RESPONSE_IN_30_HOUR_RATE = '响应及时率（30h）';\r\nexport const CLOSE_ON_TIME_RATE = '及时关闭率';\r\nexport const TOTAL_OVERALL_CLOSE_RATE = '累计总体关闭率';\r\n\r\nexport const RATE_STATISTIC_ITEMS = [\r\n  REMAIN_CLOSE_RATE,\r\n  NEW_ADD_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE\r\n];\r\n\r\nexport const STATISTIC_PERIOD_ADD = '本年度统计周期内新增';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN = '本年度截止统计周期前遗留';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL = '本年度截止统计周期前遗留累计';\r\nexport const STATISTIC_THIS_YEAR_TOTAL = '本年度累计';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN = '上年度截至统计周期前遗留';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL = '上年度截至统计周期前遗留累计';\r\nexport const STATISTIC_BEFORE_PERIOD_NEED_HANDLE = '截至本年度统计周期内需处理';\r\nexport const STATISTIC_BEFORE_PERIOD_TOTAL = '截至本年度统计周期累计';\r\nexport const STATISTIC_PERIOD_RATE = '本年度统计周期内';\r\n\r\nexport const STAGES = [\r\n  '一期',\r\n  '二期',\r\n  '三期',\r\n  '四期',\r\n  '五期',\r\n  '六期',\r\n  '七期',\r\n  '八期',\r\n  '九期',\r\n  '十期'\r\n];\r\n\r\n\r\n// new data key\r\nexport const COL_AREA = '大区';\r\nexport const COL_CITY_COMPANY = '城市公司';\r\nexport const COL_PROJECT = '项目';\r\nexport const COL_PROJECT_STAGE = '项目分期';\r\nexport const COL_CURRENT_STATUS = '当前工单状态';\r\nexport const COL_FIRST_CLASS = '一级报事分类';\r\nexport const COL_REPORT_TIME = '报事时间';\r\nexport const COL_RESPONSE_TIME = '响应时间';\r\nexport const COL_FINISH_TIME = '实际完成时间';\r\nexport const COL_TOTAL_HANDLE_TIME = '工单总处理时长(天）';\r\nexport const COL_EXPIRE = '总时长超时预警';\r\nexport const COL_CLOSE_TIME_1 = '业主关闭时间';\r\nexport const COL_CLOSE_TIME_2 = '非正常关闭时间';\r\nexport const COL_CLOSE_TIME_3 = '强制关闭时间';\r\nexport const COL_PAUSE = '累计暂停时长';\r\nexport const COL_OVERTIME_WARN = '总时长超时预警';\r\n\r\nexport const CATEGORY_UNCLASSIFY = '未分类';\r\n\r\nexport const TICKET_STATUS = {\r\n  RESPONSED: '已响应',\r\n  SOLUTION_PREPARE: '方案制定中',\r\n  SOLUTION_APPROVE: '方案已批准',\r\n  INVALID: '无效',\r\n  CLOSED: '已关闭',\r\n  FORCE_CLOSE: '强制关闭',\r\n  CLOSE_ABNORMAL: '非正常关闭',\r\n  DISPATCHED: '已分派',\r\n  WORK_DOING: '施工中',\r\n  WORK_FINISHED: '施工完成',\r\n  DROP_IN: '已上门',\r\n  COMMENTED: '已评价',\r\n  NEW: '新建'\r\n};\r\n\r\nexport const CATEGORIES = [\r\n  '土建',\r\n  '维修-其他类',\r\n  '机电',\r\n  '室内精装',\r\n  '室内门窗及入户门',\r\n  '厨房设备',\r\n  '卫生设备',\r\n  '渗漏',\r\n  '室内电器',\r\n  '公区部分',\r\n  CATEGORY_UNCLASSIFY\r\n];\r\n\r\n// statistic items\r\nexport const STATISTIC_ITEMS = [\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_NOT_RESPONSED,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME\r\n]\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n// import the core library.\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\n// then import echarts modules those you have used manually.\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n// import 'echarts/lib/chart/scatter';\r\n// import 'echarts/lib/chart/radar';\r\n\r\n// import 'echarts/lib/chart/map';\r\n// import 'echarts/lib/chart/treemap';\r\n// import 'echarts/lib/chart/graph';\r\n// import 'echarts/lib/chart/gauge';\r\n// import 'echarts/lib/chart/funnel';\r\n// import 'echarts/lib/chart/parallel';\r\n// import 'echarts/lib/chart/sankey';\r\n// import 'echarts/lib/chart/boxplot';\r\n// import 'echarts/lib/chart/candlestick';\r\n// import 'echarts/lib/chart/effectScatter';\r\n// import 'echarts/lib/chart/lines';\r\n// import 'echarts/lib/chart/heatmap';\r\n\r\n// import 'echarts/lib/component/graphic';\r\n// import 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/polar';\r\n// import 'echarts/lib/component/geo';\r\n// import 'echarts/lib/component/parallel';\r\n// import 'echarts/lib/component/singleAxis';\r\n// import 'echarts/lib/component/brush';\r\n\r\nimport 'echarts/lib/component/title';\r\n\r\n// import 'echarts/lib/component/dataZoom';\r\n// import 'echarts/lib/component/visualMap';\r\n\r\n// import 'echarts/lib/component/markPoint';\r\n// import 'echarts/lib/component/markLine';\r\n// import 'echarts/lib/component/markArea';\r\n\r\n// import 'echarts/lib/component/timeline';\r\nimport 'echarts/lib/component/toolbox';\r\n// import { Rect } from 'echarts/lib/util/graphic';\r\n\r\n// import 'zrender/lib/vml/vml';\r\n\r\nimport  { DEFAULT_SECOND_CATEGORIES } from '../constants';\r\n\r\nfunction ChartView(props) {\r\n  const titleConfig = {\r\n    left: 'center',\r\n    top: 0,\r\n    textStyle: {\r\n      color: '#000000'\r\n    }\r\n  };\r\n  const toolboxConfig = {\r\n    feature: {\r\n      saveAsImage: { show: true }\r\n    },\r\n    right: 40\r\n  };\r\n  const legendConfig = {\r\n    left: 40\r\n  };\r\n  const styles = {\r\n    height: '500px',\r\n  };\r\n\r\n  let citySecondCategoryCloseAverageHandleTimeSeries = [];\r\n  let newAddedCities = [];\r\n  for (let cityName in props.citySecondCategoryCloseAverageHandleTimeData) {\r\n    newAddedCities = [\r\n      ...newAddedCities, cityName\r\n    ];\r\n    citySecondCategoryCloseAverageHandleTimeSeries = [\r\n      ...citySecondCategoryCloseAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.citySecondCategoryCloseAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  let citySecondCategoryOpenAverageHandleTimeSeries = [];\r\n  let openAverageHandleTimeCities = [];\r\n  for (let cityName in props.citySecondCategoryOpenAverageHandleTimeData) {\r\n    openAverageHandleTimeCities = [\r\n      ...openAverageHandleTimeCities, cityName\r\n    ];\r\n    citySecondCategoryOpenAverageHandleTimeSeries = [\r\n      ...citySecondCategoryOpenAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.citySecondCategoryOpenAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各城市日常维修总体关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.cities,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '累计受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '累计受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityTotalAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityOverallCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各项目日常维修总体关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.projects,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '累计受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '累计受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectTotalAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectOverallCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各项目分期日常维修总体关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.stages,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '累计受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '累计受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.stageTotalAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.stageOverallCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '剩余未关城市分布图',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '城市剩余未关',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.cityOpenData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '剩余未关二级分类分布图',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '二级分类',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.secondCategoryOpenData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各城市新增维修关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.cities,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '新增受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '新增受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityNewAddedAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityNewAddedCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '项目新增关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.newAddedProjects,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '新增受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '新增受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectNewAddedAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectNewAddedCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '分期新增关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.newAddedStages,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '新增受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '新增受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.stageNewAddedAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.stageNewAddedCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '新增维修城市分布图',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '城市',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.cityNewAddedAcceptData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '新增维修二级分类分布图',\r\n              left: 'center',\r\n              textStyle: {\r\n                color: '#000000'\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '城市',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.secondCategoryNewAddedAcceptData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各城市需处理关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            legend: {\r\n              data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n              ...legendConfig\r\n            },\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.cities,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '需处理受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '比率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '需处理受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityNeedHandleAcceptData\r\n              },\r\n              {\r\n                name: '及时关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityNeedHandleCloseOnTimeRateData\r\n              },\r\n              {\r\n                name: '总体关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityNeedHandleCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '各项目需处理关闭率',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            legend: {\r\n              data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n              ...legendConfig\r\n            },\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.needHandleProjects,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '需处理受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '比率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '需处理受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectNeedHandleAcceptData\r\n              },\r\n              {\r\n                name: '及时关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectNeedHandleCloseOnTimeRateData\r\n              },\r\n              {\r\n                name: '总体关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.projectNeedHandleCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '平均处理时长城市分布图',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.cities,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '处理时长（天）'\r\n              },\r\n            ],\r\n            legend: {\r\n              data: ['已关闭', '剩余未关'],\r\n              ...legendConfig\r\n            },\r\n            series: [\r\n              {\r\n                name: '已关闭',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityCloseAverageHandleTimeData\r\n              },\r\n              {\r\n                name: '剩余未关',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.cityOpenAverageHandleTimeData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '已关闭维修分类平均处理时长',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: DEFAULT_SECOND_CATEGORIES,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '处理时长（天）'\r\n              },\r\n            ],\r\n            legend: {\r\n              data: newAddedCities,\r\n              ...legendConfig\r\n            },\r\n            series: citySecondCategoryCloseAverageHandleTimeSeries\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{margin: '40px 0'}}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '剩余未关维修分类平均处理时长',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: DEFAULT_SECOND_CATEGORIES,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '处理时长（天）'\r\n              },\r\n            ],\r\n            legend: {\r\n              data: openAverageHandleTimeCities,\r\n              ...legendConfig\r\n            },\r\n            series: citySecondCategoryOpenAverageHandleTimeSeries\r\n          }}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartView;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport {\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  CATEGORIES,\r\n  KEY_TICKET_TOTAL\r\n} from '../constants';\r\n\r\nfunction ProjectTable(props) {\r\n  const projectColumn = (\r\n    <Table.Column\r\n      dataIndex={KEY_PROJECT_NAME}\r\n      title={KEY_PROJECT_NAME}\r\n      key={KEY_PROJECT_NAME}\r\n      width={300}\r\n    />\r\n  );\r\n\r\n  const otherColumns = [KEY_STATISTIC_ITEM,\r\n    ...CATEGORIES, KEY_TICKET_TOTAL].map((item) => (\r\n    <Table.Column\r\n      dataIndex={item}\r\n      title={item}\r\n      key={item}\r\n      width={300}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Table\r\n      title={(currentPageData) => { return props.title }}\r\n      dataSource={props.filteredProjects.length > 0 ?\r\n        props.data.filter(item => props.filteredProjects.indexOf(item[KEY_PROJECT_NAME]) !== -1) : props.data}\r\n      pagination={{ pageSize: 50 }}\r\n      scroll={{ y: 400 }}\r\n      size='small'\r\n    >\r\n      {projectColumn}\r\n      {otherColumns}\r\n    </Table>\r\n  );\r\n}\r\n\r\nProjectTable.defaultProps = {\r\n  filteredProjects: []\r\n}\r\n\r\nexport default ProjectTable;\r\n","import {\r\n  DEFAULT_STATISTIC_ITEMS,\r\n  KEY_TICKET_TOTAL,\r\n  NEW_ADD_CLOSE_RATE,\r\n  REMAIN_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  RESPONSE_IN_30_MIN_RATE,\r\n  RESPONSE_IN_30_HOUR_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE,\r\n  STAGES,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  STATISTIC_ITEMS,\r\n  DEFAULT_SECOND_CATEGORIES,\r\n  CATEGORIES,\r\n  RATE_STATISTIC_ITEMS\r\n} from './constants';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nexport function filterProjectName(projectName) {\r\n  let reg = /\\(.*?\\)|（.*?）/;\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function parseTime(timeString) {\r\n  let time = timeString.match(/\\d+/g);\r\n  let day = 0, hour = 0, min = 0;\r\n  if (time && time.length > 0) {\r\n    day = window.parseInt(time[0]);\r\n    hour = window.parseInt(time[1]);\r\n    min = window.parseInt(time[2]);\r\n  }\r\n  return { day, hour, min };\r\n}\r\n\r\nexport function filterProject(projectName, reg) {\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function filterProjectStage(projectName) {\r\n  let filteredName = null;\r\n  for (let stage of STAGES) {\r\n    if (projectName.indexOf(stage) != -1) {\r\n      filteredName = projectName.substring(0, projectName.indexOf(stage));\r\n      return filteredName;\r\n    }\r\n  }\r\n  return projectName;\r\n}\r\n\r\nexport function formatToTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToRateTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of RATE_STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToAreaTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let statisticItem of STATISTIC_ITEMS) {\r\n    let rowData = {};\r\n    rowKey++;\r\n    rowData.key = rowKey;\r\n    rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n    for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n      rowData[category] = data[category][statisticItem]\r\n    }\r\n    tableData.push(rowData);\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToAreaTateTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let statisticItem of [NEW_ADD_CLOSE_RATE, REMAIN_CLOSE_RATE, OVERALL_CLOSE_RATE,\r\n    RESPONSE_IN_30_MIN_RATE, RESPONSE_IN_30_HOUR_RATE, CLOSE_ON_TIME_RATE, TOTAL_OVERALL_CLOSE_RATE]) {\r\n    let rowData = {};\r\n    rowKey++;\r\n    rowData.key = rowKey;\r\n    rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n    for (let secondCategory of [...DEFAULT_SECOND_CATEGORIES, KEY_TICKET_TOTAL]) {\r\n      rowData[secondCategory] = data[secondCategory][statisticItem]\r\n    }\r\n    tableData.push(rowData);\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function readExcelData (fileList) {\r\n  return new Promise((resolve, reject) => {\r\n    let fileReader = new FileReader();\r\n    let data = [];\r\n\r\n    let readFile = (index) => {\r\n      if (index < fileList.length) {\r\n        fileReader.onload = (event) => {\r\n          let workbook = XLSX.read(event.target.result, { type: 'binary' });\r\n          let sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n          data = [...data, ...XLSX.utils.sheet_to_json(sheet, { blankrows: false })];\r\n          readFile(index + 1);\r\n        }\r\n        fileReader.readAsBinaryString(fileList[index]);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    };\r\n    readFile(0);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, Select } from 'antd';\r\nimport ProjectTable from './ProjectTable';\r\nimport {\r\n  STATISTIC_PERIOD_ADD,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_THIS_YEAR_TOTAL,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_BEFORE_PERIOD_NEED_HANDLE,\r\n  STATISTIC_BEFORE_PERIOD_TOTAL,\r\n  STATISTIC_PERIOD_RATE\r\n} from '../constants';\r\nimport {\r\n  formatToTable,\r\n  formatToRateTable\r\n} from '../utils';\r\n\r\nclass ProjectView extends React.Component {\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredProjects: []\r\n    }\r\n  }\r\n\r\n  filterProjects = (projects) => {\r\n    if (projects.length > 0) {\r\n      this.setState({\r\n        filteredProjects: projects\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filteredProjects: []\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let projects = [];\r\n    for (let item in this.props.data) {\r\n      for (let projectName in this.props.data[item]) {\r\n        if (projects.indexOf(projectName) === -1) {\r\n          projects = [...projects, projectName];\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                label='请选择要过滤的项目'\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 16 }}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: '100%' }}\r\n                  onChange={this.filterProjects}\r\n                >\r\n                  {\r\n                    projects.map((project) => (\r\n                      <Select.Option key={project}>{project}</Select.Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Row>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_ADD}\r\n              data={formatToTable(this.props.data.periodNewAddedResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.thisYearbeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_THIS_YEAR_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_NEED_HANDLE}\r\n              data={formatToTable(this.props.data.beforePeriodNeedHandleResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_TOTAL}\r\n              data={formatToTable(this.props.data.periodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_RATE}\r\n              data={formatToRateTable(this.props.data.rateResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n            />\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectView;\r\n","import {\r\n  COL_REPORT_TIME,\r\n  COL_OVERTIME_WARN,\r\n  COL_PROJECT_STAGE,\r\n  COL_FIRST_CLASS,\r\n  COL_CURRENT_STATUS,\r\n  COL_PAUSE,\r\n  COL_CLOSE_TIME_1,\r\n  COL_CLOSE_TIME_2,\r\n  COL_CLOSE_TIME_3,\r\n  TICKET_NOT_RESPONSED,\r\n  KEY_TICKET_TOTAL,\r\n  TICKET_STATUS,\r\n  CATEGORIES,\r\n  STATISTIC_ITEMS,\r\n  TICKET_SYSTEM_COUNT,\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_VALIDATE,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME,\r\n  NEW_ADD_CLOSE_RATE,\r\n  REMAIN_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE,\r\n  CATEGORY_UNCLASSIFY,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  RATE_STATISTIC_ITEMS\r\n} from '../constants';\r\n\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport moment from 'moment';\r\n\r\nexport const initStatisticItem = () => {\r\n  let map = {};\r\n  for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n    map[category] = {};\r\n    for (let itemName of STATISTIC_ITEMS) {\r\n      map[category][itemName] = 0;\r\n    }\r\n  }\r\n  return map;\r\n}\r\n\r\nexport const initRate = () => {\r\n  let map = {};\r\n  for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n    map[category] = {};\r\n    for (let itemName of RATE_STATISTIC_ITEMS) {\r\n      map[category][itemName] = 0;\r\n    }\r\n  }\r\n  return map;\r\n}\r\n\r\nexport const getCategory = ticket => ticket[COL_FIRST_CLASS] || CATEGORY_UNCLASSIFY;\r\n\r\nexport const formatStageToTable = (data) => {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nconst STAGE = /\\d*期/;\r\n\r\nexport function filterProjectName(name) {\r\n  let filteredName = name;\r\n  if (name.match(STAGE)) {\r\n    filteredName = name.substring(0, name.match(STAGE).index);\r\n  }\r\n  return filteredName;\r\n}\r\n\r\n// 统计周期内新增\r\nexport const statisticPeriodNewAddedTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 关闭 + 剩余未关\r\n    if (ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.COMMENTED ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n        moment.duration(ticketCloseTime.diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED || ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus == TICKET_STATUS.NEW) && ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n        moment.duration(moment(closeEndTime).diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.DISPATCHED || TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus == TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留\r\nexport const statisticThisYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW) &&\r\n      ((ticketStatus == TICKET_STATUS.CLOSED ||\r\n        ticketStatus == TICKET_STATUS.FORCE_CLOSE || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n        moment.duration(ticketCloseTime.diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED || ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus == TICKET_STATUS.NEW) && ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n        moment.duration(moment(closeEndTime).diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.DISPATCHED || TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus == TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留累计\r\nexport const statisticThisYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW ||\r\n      ticketStatus == TICKET_STATUS.CLOSED ||\r\n      ticketStatus == TICKET_STATUS.FORCE_CLOSE || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n  }\r\n\r\n  return dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留\r\nexport const statisticLastYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW) &&\r\n      ((ticketStatus == TICKET_STATUS.CLOSED ||\r\n        ticketStatus == TICKET_STATUS.FORCE_CLOSE || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n        moment.duration(ticketCloseTime.diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED || ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus == TICKET_STATUS.NEW) && ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n        moment.duration(moment(closeEndTime).diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.DISPATCHED || TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus == TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留累计\r\nexport const statisticLastYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW) &&\r\n      ((ticketStatus == TICKET_STATUS.CLOSED ||\r\n        ticketStatus == TICKET_STATUS.FORCE_CLOSE || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n        moment.duration(ticketCloseTime.diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED || ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus == TICKET_STATUS.NEW) && ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n        moment.duration(moment(closeEndTime).diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.DISPATCHED || TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus == TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期累计\r\nexport const statisticThisYearTotalTickets = (tickets, closeStartTime, closeEndTime, col) => {\r\n  let dataMap = {};\r\n  for (let ticket of tickets) {\r\n    let name = ticket[col];\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus == TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus == TICKET_STATUS.DISPATCHED || ticketStatus == TICKET_STATUS.NEW) &&\r\n      ((ticketStatus == TICKET_STATUS.CLOSED ||\r\n        ticketStatus == TICKET_STATUS.FORCE_CLOSE || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n        moment.duration(ticketCloseTime.diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus == TICKET_STATUS.RESPONSED || ticketStatus == TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus == TICKET_STATUS.WORK_FINISHED || ticketStatus == TICKET_STATUS.DROP_IN ||\r\n      ticketStatus == TICKET_STATUS.SOLUTION_APPROVE || ticketStatus == TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus == TICKET_STATUS.NEW) && ((ticketStatus == TICKET_STATUS.CLOSED || ticketStatus == TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus == TICKET_STATUS.COMMENTED || ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n        moment.duration(moment(closeEndTime).diff(ticketReportTime)).subtract(ticketPauseDuration, 'days').as('days');\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus == TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus == TICKET_STATUS.DISPATCHED || TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus == TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 统计周期前需处理\r\nexport const statisticBeforePeriodNeedHandleResult = (array) => {\r\n  let beforePeriodNeedHandleResult = {};\r\n  for (let result of array) {\r\n    for (let name in result) {\r\n      if (beforePeriodNeedHandleResult[name] == null) {\r\n        beforePeriodNeedHandleResult[name] = initStatisticItem();\r\n      }\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        for (let item of STATISTIC_ITEMS) {\r\n          if (item === TICKET_CLOSE_PROCESS_TIME) {\r\n            let ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n            let ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n            beforePeriodNeedHandleResult[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n              ticketCloseCount * ticketCloseProcessTime;\r\n          } else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n            let ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n            let ticketOpenCount = result[name][category][TICKET_OPEN];\r\n            beforePeriodNeedHandleResult[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n              ticketOpenCount * ticketOpenProcessTime;\r\n          }\r\n          else {\r\n            beforePeriodNeedHandleResult[name][category][item] +=\r\n              result[name][category][item];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // get average process time\r\n  for (let name in beforePeriodNeedHandleResult) {\r\n    for (let category in beforePeriodNeedHandleResult[name]) {\r\n      let ticketCloseProcessTime = beforePeriodNeedHandleResult[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      let ticketCloseCount = beforePeriodNeedHandleResult[name][category][TICKET_CLOSE];\r\n      beforePeriodNeedHandleResult[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = beforePeriodNeedHandleResult[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = beforePeriodNeedHandleResult[name][category][TICKET_OPEN];\r\n      beforePeriodNeedHandleResult[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return beforePeriodNeedHandleResult;\r\n}\r\n\r\n// 统计周期累计\r\nexport const statisticPeriodTotalResult = (array) => {\r\n  let periodTotalResult = {};\r\n  for (let result of array) {\r\n    for (let name in result) {\r\n      if (periodTotalResult[name] == null) {\r\n        periodTotalResult[name] = initStatisticItem();\r\n      }\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        for (let item of STATISTIC_ITEMS) {\r\n          if (item === TICKET_CLOSE_PROCESS_TIME) {\r\n            let ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n            let ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n            periodTotalResult[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n              ticketCloseCount * ticketCloseProcessTime;\r\n          } else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n            let ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n            let ticketOpenCount = result[name][category][TICKET_OPEN];\r\n            periodTotalResult[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n              ticketOpenCount * ticketOpenProcessTime;\r\n          }\r\n          else {\r\n            periodTotalResult[name][category][item] +=\r\n              result[name][category][item];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // get average process time\r\n  for (let name in periodTotalResult) {\r\n    for (let category in periodTotalResult[name]) {\r\n      let ticketCloseProcessTime = periodTotalResult[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      let ticketCloseCount = periodTotalResult[name][category][TICKET_CLOSE];\r\n      periodTotalResult[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = periodTotalResult[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = periodTotalResult[name][category][TICKET_OPEN];\r\n      periodTotalResult[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n\r\n  return periodTotalResult;\r\n}\r\n\r\nexport const statisticRate = (statisticMap, statisticItem, rateMap) => {\r\n  for (let name in statisticMap) {\r\n    if (rateMap[name] == null) {\r\n      rateMap[name] = initRate();\r\n    }\r\n    for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n      if (statisticMap[name][category][TICKET_ACCEPT] > 0) {\r\n        if (statisticItem === NEW_ADD_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === REMAIN_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === OVERALL_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === CLOSE_ON_TIME_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE_ON_TIME] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === TOTAL_OVERALL_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport DataForm from './components/DataForm';\nimport ChartView from './components/ChartView';\nimport ProjectView from './components/ProjectView';\nimport { Row, Col, message, LocaleProvider, Tabs } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport {\n  TICKET_SYSTEM_COUNT,\n  TICKET_ACCEPT,\n  TICKET_OPEN,\n  TICKET_VALIDATE,\n  TICKET_PAUSE,\n  TICKET_INVALID,\n  TICKET_CLOSE,\n  TICKET_CLOSE_NORMAL,\n  TICKET_CLOSE_ABNORMAL,\n  TICKET_CLOSE_ON_TIME,\n  TICKET_RESPONSE_IN_30_MIN,\n  TICKET_RESPONSE_IN_30_HOUR,\n  TICKET_CLOSE_PROCESS_TIME,\n  TICKET_OPEN_PROCESS_TIME,\n  DEFAULT_STATISTIC_ITEMS,\n  KEY_REPORT_TIME,\n  KEY_PROJECT_NAME,\n  KEY_SECOND_CATEGORY,\n  KEY_TICKET_STATUS,\n  KEY_IS_PROCESS_EXCCED,\n  KEY_FIRST_RESPONSE_TIME,\n  KEY_PROCESS_TIME,\n  KEY_CLOSE_TIME,\n  DEFAULT_SECOND_CATEGORIES,\n  KEY_STATISTIC_ITEM,\n  KEY_TICKET_TOTAL,\n  KEY_CITY_NAME,\n  NEW_ADD_CLOSE_RATE,\n  REMAIN_CLOSE_RATE,\n  OVERALL_CLOSE_RATE,\n  RESPONSE_IN_30_MIN_RATE,\n  RESPONSE_IN_30_HOUR_RATE,\n  CLOSE_ON_TIME_RATE,\n  TOTAL_OVERALL_CLOSE_RATE,\n  RATE_STATISTIC_ITEMS,\n  CATEGORY_UNCLASSIFY,\n  COL_FIRST_CLASS,\n  COL_CURRENT_STATUS,\n  COL_PROJECT_STAGE,\n  COL_PROJECT,\n  COL_CITY_COMPANY,\n  COL_AREA,\n  COL_REPORT_TIME,\n} from './constants';\n\nimport {\n  filterProjectName,\n  parseTime,\n  filterProjectStage,\n  formatToAreaTable,\n  formatToAreaTateTable,\n  readExcelData\n} from './utils';\n\nimport { connect } from 'react-redux';\nimport { addCategories, addTicketStates } from './store/actions';\n\nimport * as Util from './functions/utils';\n\n// global variables\nlet allCategory = [];\nlet allTicketState = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityData: {\n        periodNewAddedData: [],\n        thisYearBeforePeriodData: [],\n        thisYearBeforePeriodTotalData: [],\n        thisYearTotalData: [],\n        lastYearBeforePeriodData: [],\n        lastYearBeforePeriodTotalData: [],\n        beforePeriodNeedHandleData: [],\n        periodTotalData: [],\n        rateData: [],\n        cities: []\n      },\n      areaData: {\n        periodNewAddedData: [],\n        thisYearBeforePeriodData: [],\n        thisYearBeforePeriodTotalData: [],\n        thisYearTotalData: [],\n        lastYearBeforePeriodData: [],\n        lastYearBeforePeriodTotalData: [],\n        beforePeriodNeedHandleData: [],\n        periodTotalData: [],\n        rateData: []\n      },\n      loading: false\n    };\n  }\n\n  start = (fileList, startTime, endTime) => {\n    const { addCategories, addTicketStates } = this.props;\n    this.setState({ loading: true });\n    readExcelData(fileList).then((data) => {\n      // get all categories and ticket states\n      for (let ticket of data) {\n        let category = ticket[COL_FIRST_CLASS];\n        if (category == null) {\n          category = CATEGORY_UNCLASSIFY;\n        }\n        if (allCategory.indexOf(category) === -1) {\n          allCategory = [...allCategory, category];\n        }\n        let state = ticket[COL_CURRENT_STATUS];\n        if (allTicketState.indexOf(state) === -1) {\n          allTicketState = [...allTicketState, state];\n        }\n      }\n      addCategories(allCategory);\n      addTicketStates(allTicketState);\n\n      let yearStartTime = moment(startTime).set({ month: 0, date: 1, hour: 0, minute: 0, second: 0 });\n\n      let periodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime >= startTime && ticketReportTime <= endTime;\n      });\n      let beforePeriodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime >= yearStartTime && ticketReportTime < startTime;\n      });\n      let thisYearTotalTickets = data.filter((item) => {\n        let reportTime = moment(item[KEY_REPORT_TIME]);\n        let secondCategory = item[KEY_SECOND_CATEGORY];\n        return secondCategory != null && reportTime <= endTime && reportTime >= yearStartTime;\n      });\n      let lastYearBeforePeriodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime < yearStartTime\n      });\n\n      // 统计分期\n      let stageData = {};\n      stageData.periodNewAddedResult = Util.statisticPeriodNewAddedTickets(periodTickets,\n        startTime, endTime, COL_PROJECT_STAGE);\n      stageData.thisYearBeforePeriodResult = Util.statisticThisYearBeforePeriodTickets(beforePeriodTickets,\n        startTime, endTime, COL_PROJECT_STAGE);\n      stageData.thisYearBeforePeriodTotalResult = Util.statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\n        startTime, endTime, COL_PROJECT_STAGE);\n      stageData.lastYearBeforePeriodResult = Util.statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\n        startTime, endTime, COL_PROJECT_STAGE);\n      stageData.lastYearBeforePeriodTotalResult = Util.statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\n        yearStartTime, endTime, COL_PROJECT_STAGE);\n      stageData.thisYearTotalResult = Util.statisticThisYearTotalTickets(thisYearTotalTickets,\n        yearStartTime, endTime, COL_PROJECT_STAGE);\n      stageData.beforePeriodNeedHandleResult = Util.statisticBeforePeriodNeedHandleResult([\n        stageData.periodNewAddedResult, stageData.thisYearBeforePeriodResult,\n        stageData.lastYearBeforePeriodResult]);\n      stageData.periodTotalResult = Util.statisticPeriodTotalResult([\n        stageData.lastYearBeforePeriodTotalResult,\n        stageData.thisYearTotalResult\n      ]);\n      stageData.rateResult = {};\n      Util.statisticRate(stageData.periodNewAddedResult, NEW_ADD_CLOSE_RATE, stageData.rateResult);\n      Util.statisticRate(stageData.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, stageData.rateResult);\n      Util.statisticRate(stageData.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, stageData.rateResult);\n      Util.statisticRate(stageData.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, stageData.rateResult);\n      Util.statisticRate(stageData.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, stageData.rateResult);\n      this.setState({\n        stageData\n      });\n\n      // 统计项目\n      let projectData = {};\n      projectData.periodNewAddedResult = Util.statisticPeriodNewAddedTickets(periodTickets,\n        startTime, endTime, COL_PROJECT);\n      projectData.thisYearBeforePeriodResult = Util.statisticThisYearBeforePeriodTickets(beforePeriodTickets,\n        startTime, endTime, COL_PROJECT);\n      projectData.thisYearBeforePeriodTotalResult = Util.statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\n        startTime, endTime, COL_PROJECT);\n      projectData.lastYearBeforePeriodResult = Util.statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\n        startTime, endTime, COL_PROJECT);\n      projectData.lastYearBeforePeriodTotalResult = Util.statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\n        yearStartTime, endTime, COL_PROJECT);\n      projectData.thisYearTotalResult = Util.statisticThisYearTotalTickets(thisYearTotalTickets,\n        yearStartTime, endTime, COL_PROJECT);\n      projectData.beforePeriodNeedHandleResult = Util.statisticBeforePeriodNeedHandleResult([\n        projectData.periodNewAddedResult, projectData.thisYearBeforePeriodResult,\n        projectData.lastYearBeforePeriodResult\n      ]);\n      projectData.periodTotalResult = Util.statisticPeriodTotalResult([\n        projectData.lastYearBeforePeriodTotalResult,\n        projectData.thisYearTotalResult\n      ]);\n      projectData.rateResult = {};\n      Util.statisticRate(projectData.periodNewAddedResult, NEW_ADD_CLOSE_RATE, projectData.rateResult);\n      Util.statisticRate(projectData.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, projectData.rateResult);\n      Util.statisticRate(projectData.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, projectData.rateResult);\n      Util.statisticRate(projectData.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, projectData.rateResult);\n      Util.statisticRate(projectData.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, projectData.rateResult);\n      this.setState({\n        projectData\n      });\n\n      // 统计城市\n      let cityData = {};\n      cityData.periodNewAddedResult = Util.statisticPeriodNewAddedTickets(periodTickets,\n        startTime, endTime, COL_CITY_COMPANY);\n      cityData.thisYearBeforePeriodResult = Util.statisticThisYearBeforePeriodTickets(beforePeriodTickets,\n        startTime, endTime, COL_CITY_COMPANY);\n      cityData.thisYearBeforePeriodTotalResult = Util.statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\n        startTime, endTime, COL_CITY_COMPANY);\n      cityData.lastYearBeforePeriodResult = Util.statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\n        startTime, endTime, COL_CITY_COMPANY);\n      cityData.lastYearBeforePeriodTotalResult = Util.statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\n        yearStartTime, endTime, COL_CITY_COMPANY);\n      cityData.thisYearTotalResult = Util.statisticThisYearTotalTickets(thisYearTotalTickets,\n        yearStartTime, endTime, COL_CITY_COMPANY);\n      cityData.beforePeriodNeedHandleResult = Util.statisticBeforePeriodNeedHandleResult([\n          cityData.periodNewAddedResult, cityData.thisYearBeforePeriodResult,\n          cityData.lastYearBeforePeriodResult]);\n      cityData.periodTotalResult = Util.statisticPeriodTotalResult([cityData.lastYearBeforePeriodTotalResult,\n          cityData.thisYearTotalResult]);\n      cityData.rateResult = {};\n      Util.statisticRate(cityData.periodNewAddedResult, NEW_ADD_CLOSE_RATE, cityData.rateResult);\n      Util.statisticRate(cityData.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, cityData.rateResult);\n      Util.statisticRate(cityData.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, cityData.rateResult);\n      Util.statisticRate(cityData.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, cityData.rateResult);\n      Util.statisticRate(cityData.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, cityData.rateResult);\n\n      this.setState({\n        cityData\n      });\n\n      // 统计大区\n      let areaData = {};\n      areaData.periodNewAddedResult = Util.statisticPeriodNewAddedTickets(periodTickets,\n        startTime, endTime, COL_AREA);\n      areaData.thisYearBeforePeriodResult = Util.statisticThisYearBeforePeriodTickets(beforePeriodTickets,\n        startTime, endTime, COL_AREA);\n      areaData.thisYearBeforePeriodTotalResult = Util.statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\n        startTime, endTime, COL_AREA);\n      areaData.lastYearBeforePeriodResult = Util.statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\n        startTime, endTime, COL_AREA);\n      areaData.lastYearBeforePeriodTotalResult = Util.statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\n        yearStartTime, endTime, COL_AREA);\n      areaData.thisYearTotalResult = Util.statisticThisYearTotalTickets(thisYearTotalTickets,\n        yearStartTime, endTime, COL_AREA);\n      areaData.beforePeriodNeedHandleResult = Util.statisticBeforePeriodNeedHandleResult([\n          areaData.periodNewAddedResult, areaData.thisYearBeforePeriodResult,\n          areaData.lastYearBeforePeriodResult]);\n      areaData.periodTotalResult = Util.statisticPeriodTotalResult([areaData.lastYearBeforePeriodTotalResult,\n          areaData.thisYearTotalResult]);\n      areaData.rateResult = {};\n      Util.statisticRate(areaData.periodNewAddedResult, NEW_ADD_CLOSE_RATE, areaData.rateResult);\n      Util.statisticRate(areaData.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, areaData.rateResult);\n      Util.statisticRate(areaData.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, areaData.rateResult);\n      Util.statisticRate(areaData.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, areaData.rateResult);\n      Util.statisticRate(areaData.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, areaData.rateResult);\n\n      this.setState({\n        areaData\n      });\n\n      // // 画图\n      // // 截至本年度统计周期受理累计\n      // let cityTotalAcceptData = [];\n      // // 城市总体关闭率\n      // let cityOverallCloseRateData = [];\n      // // 城市剩余未关\n      // let cityOpenData = [];\n      // // 城市新增受理\n      // let cityNewAddedAcceptData = [];\n      // // 城市新增关闭率\n      // let cityNewAddedCloseRateData = [];\n      // // 各城市需处理受理\n      // let cityNeedHandleAcceptData = [];\n      // // 各城市需处理及时关闭率\n      // let cityNeedHandleCloseOnTimeRateData = [];\n      // // 各城市需处理总体关闭率\n      // let cityNeedHandleCloseRateData = [];\n      // // 城市已关平均处理时长\n      // let cityCloseAverageHandleTimeData = [];\n      // // 城市剩余未关平均处理时长\n      // let cityOpenAverageHandleTimeData = [];\n\n      // // 各城市分类已关闭平均处理时长\n      // let citySecondCategoryCloseAverageHandleTimeData = {};\n      // let newAddedCities = [];\n\n      // // 各城市分类剩余未关平均处理时长\n      // let citySecondCategoryOpenAverageHandleTimeData = [];\n      // for (let cityName in allCityResult) {\n      //   cityTotalAcceptData = [\n      //     ...cityTotalAcceptData,\n      //     {\n      //       name: cityName,\n      //       value: allCityResult[cityName].periodTotalResult[KEY_TICKET_TOTAL][TICKET_ACCEPT]\n      //     }\n      //   ];\n      //   cityOverallCloseRateData = [\n      //     ...cityOverallCloseRateData,\n      //     {\n      //       name: cityName,\n      //       value: allCityResult[cityName].rateResult[KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\n      //     }\n      //   ];\n      //   cityOpenData = [\n      //     ...cityOpenData,\n      //     {\n      //       name: cityName,\n      //       value: allCityResult[cityName].periodTotalResult[KEY_TICKET_TOTAL][TICKET_OPEN]\n      //     }\n      //   ];\n\n      //   cityNewAddedAcceptData = [\n      //     ...cityNewAddedAcceptData, {\n      //       name: cityName,\n      //       value: allCityResult[cityName].periodNewAddedResult[KEY_TICKET_TOTAL][TICKET_ACCEPT]\n      //     }\n      //   ];\n      //   cityNewAddedCloseRateData = [\n      //     ...cityNewAddedCloseRateData, {\n      //       name: cityName,\n      //       value: allCityResult[cityName].rateResult[KEY_TICKET_TOTAL][NEW_ADD_CLOSE_RATE]\n      //     }\n      //   ];\n      //   cityNeedHandleAcceptData = [\n      //     ...cityNeedHandleAcceptData, {\n      //       name: cityName,\n      //       value: allCityResult[cityName].beforePeriodNeedHandleResult[KEY_TICKET_TOTAL][TICKET_ACCEPT]\n      //     }\n      //   ];\n      //   cityNeedHandleCloseOnTimeRateData = [\n      //     ...cityNeedHandleCloseOnTimeRateData, {\n      //       name: cityName,\n      //       value: allCityResult[cityName].rateResult[KEY_TICKET_TOTAL][CLOSE_ON_TIME_RATE]\n      //     }\n      //   ];\n      //   cityNeedHandleCloseRateData = [\n      //     ...cityNeedHandleCloseRateData, {\n      //       name: cityName,\n      //       value: allCityResult[cityName].rateResult[KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\n      //     }\n      //   ];\n      //   cityCloseAverageHandleTimeData = [\n      //     ...cityCloseAverageHandleTimeData,\n      //     {\n      //       name: cityName,\n      //       value: allCityResult[cityName].periodNewAddedResult[KEY_TICKET_TOTAL][TICKET_CLOSE_PROCESS_TIME]\n      //     }\n      //   ];\n      //   cityOpenAverageHandleTimeData = [\n      //     ...cityOpenAverageHandleTimeData,\n      //     {\n      //       name: cityName,\n      //       value:  allCityResult[cityName].beforePeriodNeedHandleResult[KEY_TICKET_TOTAL][TICKET_OPEN_PROCESS_TIME]\n      //     }\n      //   ];\n      //   citySecondCategoryCloseAverageHandleTimeData[cityName] = [];\n      //   citySecondCategoryOpenAverageHandleTimeData[cityName] = [];\n      //   for (let secondCategory of DEFAULT_SECOND_CATEGORIES) {\n      //     citySecondCategoryCloseAverageHandleTimeData[cityName] = [\n      //       ...citySecondCategoryCloseAverageHandleTimeData[cityName], {\n      //         name: secondCategory,\n      //         value: allCityResult[cityName].periodNewAddedResult[secondCategory][TICKET_CLOSE_PROCESS_TIME]\n      //       }\n      //     ];\n      //     citySecondCategoryOpenAverageHandleTimeData[cityName] = [\n      //       ...citySecondCategoryOpenAverageHandleTimeData[cityName], {\n      //         name: secondCategory,\n      //         value: allCityResult[cityName].periodNewAddedResult[secondCategory][TICKET_OPEN_PROCESS_TIME]\n      //       }\n      //     ];\n      //   }\n      // }\n      // this.setState({\n      //   cityTotalAcceptData,\n      //   cityOverallCloseRateData,\n      //   cityOpenData,\n      //   cityNewAddedAcceptData,\n      //   cityNewAddedCloseRateData,\n      //   cityNeedHandleAcceptData,\n      //   cityNeedHandleCloseOnTimeRateData,\n      //   cityNeedHandleCloseRateData,\n      //   cityCloseAverageHandleTimeData,\n      //   cityOpenAverageHandleTimeData,\n      //   citySecondCategoryCloseAverageHandleTimeData,\n      //   citySecondCategoryOpenAverageHandleTimeData,\n      //   newAddedCities\n      // });\n\n      // // 二级分类剩余未关\n      // let secondCategoryOpenData = [];\n      // // 二级分类新增受理\n      // let secondCategoryNewAddedAcceptData = [];\n      // // 二级分类已关闭平均处理时长\n      // let secondCategoryCloseAverageHandleTimeData = [];\n      // // 二级分类剩余未关平均处理时长\n      // let secondCategoryOpenAverageHandleTimeData = [];\n      // for (let secondCategory of DEFAULT_SECOND_CATEGORIES) {\n      //   secondCategoryOpenData = [...secondCategoryOpenData, {\n      //     name: secondCategory,\n      //     value: areaResult.periodTotalResult[secondCategory][TICKET_OPEN]\n      //   }];\n      //   secondCategoryNewAddedAcceptData = [\n      //     ...secondCategoryNewAddedAcceptData,\n      //     {\n      //       name: secondCategory,\n      //       value: areaResult.periodNewAddedResult[secondCategory][TICKET_ACCEPT]\n      //     }\n      //   ];\n      //   secondCategoryCloseAverageHandleTimeData = [\n      //     ...secondCategoryCloseAverageHandleTimeData,\n      //     {\n      //       name: secondCategory,\n      //       value: areaResult.periodNewAddedResult[secondCategory][TICKET_CLOSE_PROCESS_TIME]\n      //     }\n      //   ];\n      //   secondCategoryOpenAverageHandleTimeData = [\n      //     ...secondCategoryOpenAverageHandleTimeData,\n      //     {\n      //       name: secondCategory,\n      //       value: areaResult.periodNewAddedResult[secondCategory][TICKET_OPEN_PROCESS_TIME]\n      //     }\n      //   ]\n      // }\n      // this.setState({\n      //   secondCategoryOpenData,\n      //   secondCategoryNewAddedAcceptData,\n      //   secondCategoryCloseAverageHandleTimeData,\n      //   secondCategoryOpenAverageHandleTimeData\n      // });\n\n      // // 项目受理累计\n      // let projectTotalAcceptData = [];\n      // // 项目总体关闭率\n      // let projectOverallCloseRateData = [];\n      // // 项目新增受理\n      // let projectNewAddedAcceptData = [];\n      // // 项目新增关闭率\n      // let projectNewAddedCloseRateData = [];\n      // let projects = [];\n      // for (let projectName in allProjectResult.periodTotalResult) {\n      //   projects = [...projects, projectName];\n      //   let ticketAccept = allProjectResult.periodTotalResult[projectName][KEY_TICKET_TOTAL][TICKET_ACCEPT];\n      //   projectTotalAcceptData = [\n      //     ...projectTotalAcceptData,\n      //     { name: projectName, value: ticketAccept }\n      //   ];\n      //   projectOverallCloseRateData = [\n      //     ...projectOverallCloseRateData,\n      //     {\n      //       name: projectName,\n      //       value: allProjectResult.rateResult[projectName][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\n      //     }\n      //   ];\n\n      // }\n\n      // // 项目需处理受理\n      // let projectNeedHandleAcceptData = [];\n      // let projectNeedHandleCloseRateData = [];\n      // let projectNeedHandleCloseOnTimeRateData = [];\n      // let needHandleProjects = [];\n      // for (let projectName in allProjectResult.beforePeriodNeedHandleResult) {\n      //   projectNeedHandleAcceptData = [\n      //     ...projectNeedHandleAcceptData, {\n      //       name: projectName,\n      //       value: allProjectResult.beforePeriodNeedHandleResult[projectName][KEY_TICKET_TOTAL][TICKET_ACCEPT]\n      //     }\n      //   ];\n      //   projectNeedHandleCloseRateData = [\n      //     ...projectNeedHandleCloseRateData, {\n      //       name: projectName,\n      //       value: allProjectResult.rateResult[projectName][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\n      //     }\n      //   ];\n      //   projectNeedHandleCloseOnTimeRateData = [\n      //     ...projectNeedHandleCloseOnTimeRateData, {\n      //       name: projectName,\n      //       value: allProjectResult.rateResult[projectName][KEY_TICKET_TOTAL][CLOSE_ON_TIME_RATE]\n      //     }\n      //   ];\n      //   needHandleProjects = [\n      //     ...needHandleProjects,\n      //     projectName\n      //   ];\n      // }\n      // this.setState({\n      //   projectNeedHandleAcceptData,\n      //   projectNeedHandleCloseRateData,\n      //   projectNeedHandleCloseOnTimeRateData,\n      //   needHandleProjects\n      // })\n\n      // let newAddedProjects = [];\n      // for (let projectName in allProjectResult.periodNewAddedResult) {\n      //   newAddedProjects = [...newAddedProjects, projectName];\n      //   let ticketAccept = allProjectResult.periodNewAddedResult[projectName][KEY_TICKET_TOTAL][TICKET_ACCEPT];\n      //   projectNewAddedAcceptData = [\n      //     ...projectNewAddedAcceptData,\n      //     {\n      //       name: projectName,\n      //       value: ticketAccept\n      //     }\n      //   ];\n      //   projectNewAddedCloseRateData = [\n      //     ...projectNewAddedCloseRateData,\n      //     {\n      //       name: projectName,\n      //       value: allProjectResult.rateResult[projectName][KEY_TICKET_TOTAL][NEW_ADD_CLOSE_RATE]\n      //     }\n      //   ];\n      // }\n\n      // this.setState({\n      //   projectTotalAcceptData,\n      //   projectOverallCloseRateData,\n      //   projects,\n      //   projectNewAddedAcceptData,\n      //   projectNewAddedCloseRateData,\n      //   newAddedProjects\n      // });\n\n      // // 分期累计\n      // let stageTotalAcceptData = [];\n      // // 分期总体关闭率\n      // let stageOverallCloseRateData = [];\n      // let stages = [];\n      // for (let stageName in allStageResult.periodTotalResult) {\n      //   stages = [...stages, stageName];\n      //   let ticketAccept = allStageResult.periodTotalResult[stageName][KEY_TICKET_TOTAL][TICKET_ACCEPT];\n      //   stageTotalAcceptData = [\n      //     ...stageTotalAcceptData,\n      //     { name: stageName, value: ticketAccept }\n      //   ];\n      //   stageOverallCloseRateData = [\n      //     ...stageOverallCloseRateData,\n      //     {\n      //       name: stageName,\n      //       value: allStageResult.rateResult[stageName][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\n      //     }\n      //   ];\n      // }\n      // this.setState({\n      //   stageTotalAcceptData,\n      //   stageOverallCloseRateData,\n      //   stages\n      // });\n\n      // // 分期新增受理\n      // let stageNewAddedAcceptData = [];\n      // // 分期新增关闭率\n      // let stageNewAddedCloseRateData = [];\n      // let newAddedStages = [];\n      // for (let stageName in allStageResult.periodNewAddedResult) {\n      //   newAddedStages = [...newAddedStages, stageName];\n      //   let ticketAccept = allStageResult.periodNewAddedResult[stageName][KEY_TICKET_TOTAL][TICKET_ACCEPT];\n      //   stageNewAddedAcceptData = [\n      //     ...stageNewAddedAcceptData,\n      //     { name: stageName, value: ticketAccept }\n      //   ];\n      //   stageNewAddedCloseRateData = [\n      //     ...stageNewAddedCloseRateData,\n      //     {\n      //       name: stageName,\n      //       value: allStageResult.rateResult[stageName][KEY_TICKET_TOTAL][NEW_ADD_CLOSE_RATE]\n      //     }\n      //   ];\n      // }\n      // this.setState({\n      //   stageNewAddedAcceptData,\n      //   stageNewAddedCloseRateData,\n      //   newAddedStages\n      // });\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const tabChart = (\n      <ChartView\n        cityTotalAcceptData={this.state.cityTotalAcceptData}\n        cityOverallCloseRateData={this.state.cityOverallCloseRateData}\n        projectTotalAcceptData={this.state.projectTotalAcceptData}\n        projectOverallCloseRateData={this.state.projectOverallCloseRateData}\n        stageTotalAcceptData={this.state.stageTotalAcceptData}\n        stageOverallCloseRateData={this.state.stageOverallCloseRateData}\n        cityOpenData={this.state.cityOpenData}\n        secondCategoryOpenData={this.state.secondCategoryOpenData}\n        cityNewAddedAcceptData={this.state.cityNewAddedAcceptData}\n        cityNewAddedCloseRateData={this.state.cityNewAddedCloseRateData}\n        secondCategoryNewAddedAcceptData={this.state.secondCategoryNewAddedAcceptData}\n        projectNewAddedAcceptData={this.state.projectNewAddedAcceptData}\n        projectNewAddedCloseRateData={this.state.projectNewAddedCloseRateData}\n        newAddedProjects={this.state.newAddedProjects}\n        stageNewAddedAcceptData={this.state.stageNewAddedAcceptData}\n        stageNewAddedCloseRateData={this.state.stageNewAddedCloseRateData}\n        newAddedStages={this.state.newAddedStages}\n        cityNeedHandleAcceptData={this.state.cityNeedHandleAcceptData}\n        cityNeedHandleCloseOnTimeRateData={this.state.cityNeedHandleCloseOnTimeRateData}\n        cityNeedHandleCloseRateData={this.state.cityNeedHandleCloseRateData}\n        projectNeedHandleAcceptData={this.state.projectNeedHandleAcceptData}\n        projectNeedHandleCloseRateData={this.state.projectNeedHandleCloseRateData}\n        projectNeedHandleCloseOnTimeRateData={this.state.projectNeedHandleCloseOnTimeRateData}\n        needHandleProjects={this.state.needHandleProjects}\n        cityCloseAverageHandleTimeData={this.state.cityCloseAverageHandleTimeData}\n        cityOpenAverageHandleTimeData={this.state.cityOpenAverageHandleTimeData}\n        citySecondCategoryCloseAverageHandleTimeData={this.state.citySecondCategoryCloseAverageHandleTimeData}\n        citySecondCategoryOpenAverageHandleTimeData={this.state.citySecondCategoryOpenAverageHandleTimeData}\n        secondCategoryOpenAverageHandleTimeData={this.state.secondCategoryOpenAverageHandleTimeData}\n        newAddedCities={this.state.newAddedCities}\n        cities={this.state.cityData.cities}\n        projects={this.state.projects}\n        stages={this.state.stages}\n      />\n    );\n\n    const tabArea = (\n      <ProjectView\n        data={this.state.areaData}\n      />\n    );\n\n    // const tabCity = (\n    //   <CityView\n    //     periodNewAddedData={this.state.cityData.periodNewAddedData}\n    //     thisYearBeforePeriodData={this.state.cityData.thisYearBeforePeriodData}\n    //     thisYearBeforePeriodTotalData={this.state.cityData.thisYearBeforePeriodTotalData}\n    //     thisYearTotalData={this.state.cityData.thisYearTotalData}\n    //     lastYearBeforePeriodData={this.state.cityData.lastYearBeforePeriodData}\n    //     lastYearBeforePeriodTotalData={this.state.cityData.lastYearBeforePeriodTotalData}\n    //     beforePeriodNeedHandleData={this.state.cityData.beforePeriodNeedHandleData}\n    //     periodTotalData={this.state.cityData.periodTotalData}\n    //     rateData={this.state.cityData.rateData}\n    //     cities={this.state.cityData.cities}\n    //     cityOpenData={this.state.cityData.cityOpenData}\n    //     secondCategoryOpenData={this.state.secondCategoryOpenData}\n    //   />\n    // );\n\n    const tabCity = (\n      <ProjectView\n        data={this.state.cityData}\n      />\n    )\n\n    const tabProject = (\n      <ProjectView\n        data={this.state.projectData}\n      />\n    );\n\n    const tabStage = (\n      <ProjectView\n        data={this.state.stageData}\n      />\n    );\n\n    return (\n      <LocaleProvider locale={zh_CN}>\n        <div>\n          <h2 className=\"text--center heading\">统计辅助工具</h2>\n          <DataForm\n            onStart={this.start}\n            onExport={this.exportExcel}\n            loading={this.state.loading}\n          />\n          <Row style={{ margin: '40px 0' }}>\n            <Col span={22} offset={1}>\n              <Tabs type=\"card\">\n                <Tabs.TabPane tab=\"统计图\" key=\"统计图\">{tabChart}</Tabs.TabPane>\n                <Tabs.TabPane tab=\"大区\" key=\"大区\">{tabArea}</Tabs.TabPane>\n                <Tabs.TabPane tab=\"城市\" key=\"城市\">{tabCity}</Tabs.TabPane>\n                <Tabs.TabPane tab=\"项目\" key=\"项目\">{tabProject}</Tabs.TabPane>\n                <Tabs.TabPane tab=\"分期\" key=\"分期\">{tabStage}</Tabs.TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </LocaleProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addCategories,\n  addTicketStates\n}\n\nconst ConnectedApp = connect(null, mapDispatchToProps)(App);\n\nexport default ConnectedApp;\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES,\r\n  ADD_TICKET_STATES\r\n} from '../action-types';\r\n\r\nexport const addCategory = category => ({\r\n  type: ADD_CATEGORY,\r\n  payload: {\r\n    category\r\n  }\r\n});\r\n\r\nexport const addCategories = categories => ({\r\n  type: ADD_CATEGORIES,\r\n  payload: {\r\n    categories\r\n  }\r\n});\r\n\r\nexport const addTicketStates = ticketStates => ({\r\n  type: ADD_TICKET_STATES,\r\n  payload: {\r\n    ticketStates\r\n  }\r\n})\r\n","export const ADD_CATEGORY = 'ADD_CATEGORY';\r\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';\r\nexport const ADD_TICKET_STATES = 'ADD_TICKET_STATES';\r\n","import { combineReducers } from 'redux';\r\nimport category from './category';\r\nimport ticketState from './ticket-state';\r\n\r\nconst reducer = combineReducers({\r\n  category,\r\n  ticketState\r\n});\r\n\r\nexport default reducer;\r\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY:\r\n      const { category } = action.payload;\r\n      return [\r\n        ...state,\r\n        category\r\n      ];\r\n    case ADD_CATEGORIES:\r\n      const { categories } = action.payload;\r\n      return [\r\n        ...state,\r\n        ...categories\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_TICKET_STATES\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TICKET_STATES:\r\n      const { ticketStates } = action.payload;\r\n      return [\r\n        ...state,\r\n        ...ticketStates\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}