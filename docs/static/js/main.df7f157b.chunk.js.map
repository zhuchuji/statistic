{"version":3,"sources":["constants.js","components/DataForm.js","components/CommonCharts.js","components/ChartView.js","components/ProjectTable.js","utils.js","components/ProjectView.js","functions/utils.js","App.js","store/actions/index.js","store/action-types.js","store/reducers/index.js","store/reducers/all-categories.js","store/reducers/all-areas.js","store/index.js","index.js"],"names":["KEY_REPORT_TIME","KEY_PROJECT_NAME","KEY_STATISTIC_ITEM","KEY_TICKET_TOTAL","RATE_STATISTIC_ITEMS","COL_AREA","COL_CITY_COMPANY","COL_PROJECT","COL_PROJECT_STAGE","COL_REPORT_TIME","COL_DUTY_WORKER","TICKET_STATUS","CATEGORIES","STATISTIC_ITEMS","DataForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","compareToStartDate","rule","value","callback","form","getFieldValue","compareToEndDate","state","fileList","startStatistic","bind","assertThisInitialized","_this2","Promise","resolve","reject","validateFields","err","values","_this3","validateForm","then","startTime","Date","set","hour","minute","second","endTime","onStart","catch","_this4","getFieldDecorator","react_default","a","createElement","es_form","layout","row","es_col","span","Item","label","labelCol","wrapperCol","rules","required","message","upload","accept","multiple","beforeUpload","file","setState","_ref","toConsumableArray","concat","onRemove","_ref2","index","indexOf","newFileList","slice","splice","es_button","validator","date_picker","offset","loading","type","onClick","React","Component","defaultPorps","WrapDataForm","create","titleConfig","left","top","textStyle","color","toolboxConfig","feature","saveAsImage","show","right","legendConfig","styles","margin","height","tooltipConifg","trigger","axisPointer","crossStyle","CommonCharts","core_default","style","echarts","option","title","objectSpread","text","title1","tooltip","toolbox","xAxis","data","interval","axisLabel","rotate","yAxis","name","min","max","series","barMaxWidth","position","formatter","graphData","totalAcceptData","yAxisIndex","overallCloseRateData","title2","newAddedAcceptData","newAddedCloseRateData","title5","radius","openData","title3","legend","needHandleAcceptData","needHandleCloseOnTimeRateData","needHandleCloseRateData","title4","closeAverageHandleTimeData","openAverageHandleTimeData","ChartView","cityCategoryCloseAverageHandleTimeSeries","newAddedCities","cityName","cityGraphData","cityCategoryCloseAverageHandleTimeData","citySecondCategoryOpenAverageHandleTimeSeries","openAverageHandleTimeCities","citySecondCategoryOpenAverageHandleTimeData","components_CommonCharts","areaGraphData","allAreas","categoryGraphData","allCategories","allCities","projectGraphData","allProjects","stageGraphData","allStages","ProjectTable","projectColumn","table","Column","dataIndex","key","width","otherColumns","map","item","filter","filteredProjects","length","filteredItems","currentPageData","dataSource","pagination","pageSize","scroll","y","size","defaultProps","formatToTable","tableData","rowKey","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","statisticItem","rowData","_arr","_i","category","push","return","formatToRateTable","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_arr2","_i2","ProjectView","filterProjects","projects","filterItems","items","exportData","header","sheet1","XLSX","utils","json_to_sheet","periodNewAddedResult","sheet2","thisYearBeforePeriodResult","sheet3","thisYearBeforePeriodTotalResult","sheet4","thisYearTotalResult","sheet5","lastYearBeforePeriodResult","sheet6","lastYearBeforePeriodTotalResult","sheet7","beforePeriodNeedHandleResult","sheet8","periodTotalResult","sheet9","rateResult","workbook","book_new","book_append_sheet","writeFile","moment","now","format","es_select","mode","onChange","project","Option","components_ProjectTable","initStatisticItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","itemName","initRate","getCategory","ticket","getItem","colContent","statisticCloseHandleTime","ticketStatistic","ticketCloseTime","ticketReportTime","ticketPauseDuration","closeHandleTime","duration","diff","subtract","as","statisticOpenHandleTime","closeEndTime","openHandleTime","statisticRate","statisticMap","rateMap","toFixed","statistc","periodTickets","beforePeriodTickets","thisYearTotalTickets","lastYearBeforePeriodTickets","col","allItems","yearStartTime","month","date","tickets","closeStartTime","dataMap","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","ticketCategory","ticketStatus","Number","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","ticketCloseCount","ticketCloseProcessTime","ticketOpenProcessTime","ticketOpenCount","statisticPeriodNewAddedTickets","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","statisticThisYearBeforePeriodTickets","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","statisticThisYearBeforePeriodTotalTickets","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","statisticLastYearBeforePeriodTickets","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","statisticLastYearBeforePeriodTotalTickets","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","statisticThisYearTotalTickets","array","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","result","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","statisticBeforePeriodNeedHandleResult","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","statisticPeriodTotalResult","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","formatGraphData","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","formatCategoryGraphData","area","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","App","start","addCategories","fileReader","FileReader","readFile","onload","event","read","target","sheet","Sheets","SheetNames","sheet_to_json","blankrows","readAsBinaryString","readExcelData","allWorkers","stage","Util","city","console","log","worker","reportTime","workerData","stageData","projectData","cityData","areaData","className","components_DataForm","tabs","TabPane","tab","components_ChartView","components_ProjectView","mapDispatchToProps","categories","payload","ConnectedApp","connect","reducer","combineReducers","arguments","action","areas","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","locale_provider","locale","zh_CN","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.df7f157b.chunk.js","sourcesContent":["// statistic items\r\nexport const TICKET_SYSTEM_COUNT = '系统单数';\r\nexport const TICKET_ACCEPT = '受理';\r\nexport const TICKET_OPEN = '剩余未关';\r\nexport const TICKET_VALIDATE = '待复验';\r\nexport const TICKET_PAUSE = '暂停处理';\r\nexport const TICKET_INVALID = '无效';\r\nexport const TICKET_CLOSE = '关闭';\r\nexport const TICKET_CLOSE_NORMAL = '正常关闭';\r\nexport const TICKET_CLOSE_ABNORMAL = '非正常关闭';\r\nexport const TICKET_CLOSE_ON_TIME = '及时关闭';\r\nexport const TICKET_RESPONSE_IN_30_MIN = '响应及时单（0.5h）';\r\nexport const TICKET_RESPONSE_IN_30_HOUR = '响应及时单（30h）';\r\nexport const TICKET_CLOSE_PROCESS_TIME = '已关时长（天）';\r\nexport const TICKET_OPEN_PROCESS_TIME = '未关时长（天）';\r\nexport const TICKET_NOT_RESPONSED = '未响应';\r\nexport const TICKET_CLOSE_HANDLE_TIME_0_7 = '已关处理时长（0-7天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_7_15 = '已关处理时长（7-15天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_15_30 = '已关处理时长（15-30天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_30_60 = '已关处理时长（30-60天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_OVER_60 = '已关处理时长（大于60天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_0_7 = '未关处理时长（0-7天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_7_15 = '未关处理时长（7-15天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_15_30 = '未关处理时长（15-30天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_30_60 = '未关处理时长（30-60天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_OVER_60 = '未关处理时长（大于60天）';\r\n\r\nexport const DEFAULT_STATISTIC_ITEMS = [\r\n  TICKET_SYSTEM_COUNT,\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_VALIDATE,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_RESPONSE_IN_30_MIN,\r\n  TICKET_RESPONSE_IN_30_HOUR,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME\r\n];\r\n\r\n// data key\r\nexport const KEY_REPORT_TIME = '报事时间';\r\nexport const KEY_PROJECT_NAME = '项目';\r\nexport const KEY_SECOND_CATEGORY = '二级分类';\r\nexport const KEY_TICKET_STATUS = '工单状态';\r\nexport const KEY_IS_PROCESS_EXCCED = '是否超期处理';\r\nexport const KEY_FIRST_RESPONSE_TIME = '首次响应时长';\r\nexport const KEY_PROCESS_TIME = '处理时长';\r\nexport const KEY_CLOSE_TIME = '实际关闭时间';\r\nexport const KEY_STATISTIC_ITEM = '统计项目';\r\nexport const KEY_TICKET_TOTAL = '合计';\r\nexport const KEY_CITY_NAME = '城市';\r\n\r\n// all second categories\r\nexport const DEFAULT_SECOND_CATEGORIES = [\r\n  '墙地面及天棚',\r\n  '渗漏',\r\n  '门窗',\r\n  '强弱电',\r\n  '给排水',\r\n  '厨房设备',\r\n  '卫生设备',\r\n  '制冷设备',\r\n  '固装精装部品',\r\n  '公共区域',\r\n  '其他'\r\n];\r\n\r\nexport const NEW_ADD_CLOSE_RATE = '新增关闭率';\r\nexport const REMAIN_CLOSE_RATE = '遗留关闭率';\r\nexport const OVERALL_CLOSE_RATE = '总体关闭率';\r\nexport const RESPONSE_IN_30_MIN_RATE = '响应及时率（0.5h）'\r\nexport const RESPONSE_IN_30_HOUR_RATE = '响应及时率（30h）';\r\nexport const CLOSE_ON_TIME_RATE = '及时关闭率';\r\nexport const TOTAL_OVERALL_CLOSE_RATE = '累计总体关闭率';\r\n\r\nexport const RATE_STATISTIC_ITEMS = [\r\n  REMAIN_CLOSE_RATE,\r\n  NEW_ADD_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE\r\n];\r\n\r\nexport const STATISTIC_PERIOD_ADD = '本年度统计周期内新增';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN = '本年度截止统计周期前遗留';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL = '本年度截止统计周期前遗留累计';\r\nexport const STATISTIC_THIS_YEAR_TOTAL = '本年度累计';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN = '上年度截至统计周期前遗留';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL = '上年度截至统计周期前遗留累计';\r\nexport const STATISTIC_BEFORE_PERIOD_NEED_HANDLE = '截至本年度统计周期内需处理';\r\nexport const STATISTIC_BEFORE_PERIOD_TOTAL = '截至本年度统计周期累计';\r\nexport const STATISTIC_PERIOD_RATE = '本年度统计周期内';\r\n\r\nexport const STAGES = [\r\n  '一期',\r\n  '二期',\r\n  '三期',\r\n  '四期',\r\n  '五期',\r\n  '六期',\r\n  '七期',\r\n  '八期',\r\n  '九期',\r\n  '十期'\r\n];\r\n\r\n\r\n// new data key\r\nexport const COL_AREA = '大区';\r\nexport const COL_CITY_COMPANY = '城市公司';\r\nexport const COL_PROJECT = '项目';\r\nexport const COL_PROJECT_STAGE = '项目分期';\r\nexport const COL_CURRENT_STATUS = '当前工单状态';\r\nexport const COL_FIRST_CLASS = '一级报事分类';\r\nexport const COL_REPORT_TIME = '受理时间';\r\nexport const COL_RESPONSE_TIME = '响应时间';\r\nexport const COL_FINISH_TIME = '实际完成时间';\r\nexport const COL_TOTAL_HANDLE_TIME = '工单总处理时长(天）';\r\nexport const COL_EXPIRE = '总时长超时预警';\r\nexport const COL_CLOSE_TIME_1 = '业主关闭时间';\r\nexport const COL_CLOSE_TIME_2 = '非正常关闭时间';\r\nexport const COL_CLOSE_TIME_3 = '强制关闭时间';\r\nexport const COL_PAUSE = '累计暂停时长';\r\nexport const COL_OVERTIME_WARN = '总时长超时预警';\r\nexport const COL_DUTY_WORKER = '责任维保工程师';\r\nexport const CONTENT_UNKNOWN = '空白';\r\n\r\nexport const CATEGORY_UNCLASSIFY = '未分类';\r\n\r\nexport const TICKET_STATUS = {\r\n  RESPONSED: '已响应',\r\n  SOLUTION_PREPARE: '方案制定中',\r\n  SOLUTION_APPROVE: '方案已批准',\r\n  INVALID: '无效',\r\n  CLOSED: '已关闭',\r\n  FORCE_CLOSE: '强制关闭',\r\n  CLOSE_ABNORMAL: '非正常关闭',\r\n  DISPATCHED: '已分派',\r\n  WORK_DOING: '施工中',\r\n  WORK_FINISHED: '施工完成',\r\n  DROP_IN: '已上门',\r\n  COMMENTED: '已评价',\r\n  NEW: '新建'\r\n};\r\n\r\nexport const CATEGORIES = [\r\n  '土建',\r\n  '维修-其他类',\r\n  '机电',\r\n  '室内精装',\r\n  '室内门窗及入户门',\r\n  '厨房设备',\r\n  '卫生设备',\r\n  '渗漏',\r\n  '室内电器',\r\n  '公区部分',\r\n  CATEGORY_UNCLASSIFY\r\n];\r\n\r\n// statistic items\r\nexport const STATISTIC_ITEMS = [\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_NOT_RESPONSED,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME,\r\n  TICKET_CLOSE_HANDLE_TIME_0_7,\r\n  TICKET_CLOSE_HANDLE_TIME_7_15,\r\n  TICKET_CLOSE_HANDLE_TIME_15_30,\r\n  TICKET_CLOSE_HANDLE_TIME_30_60,\r\n  TICKET_CLOSE_HANDLE_TIME_OVER_60,\r\n  TICKET_OPEN_HANDLE_TIME_0_7,\r\n  TICKET_OPEN_HANDLE_TIME_7_15,\r\n  TICKET_OPEN_HANDLE_TIME_15_30,\r\n  TICKET_OPEN_HANDLE_TIME_30_60,\r\n  TICKET_OPEN_HANDLE_TIME_OVER_60\r\n]\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, Upload, Button, DatePicker } from 'antd';\n\nclass DataForm extends React.Component {\n  static defaultPorps = {\n    onStart: () => {}\n  }\n  static propTypes = {\n    onStart: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: []\n    };\n    this.startStatistic = this.startStatistic.bind(this);\n  }\n\n  validateForm() {\n    return new Promise((resolve, reject) => {\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          resolve();\n        } else {\n          reject();\n        }\n      })\n    });\n  }\n\n  startStatistic() {\n    this.validateForm().then(() => {\n      const form = this.props.form;\n      let startTime = new Date(form.getFieldValue('startDate').set({ hour: 0, minute: 0, second: 0 }));\n      let endTime = new Date(form.getFieldValue('endDate').set({ hour: 23, minute: 59, second: 59 }));\n      this.props.onStart(this.state.fileList, startTime, endTime);\n    }).catch(() => {});\n  }\n\n  compareToStartDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value < form.getFieldValue('startDate')) {\n      callback('结束时间应大于开始时间!');\n    } else {\n      callback();\n    }\n  }\n\n  compareToEndDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value > form.getFieldValue('endDate')) {\n      callback('开始时间应小于结束时间!');\n    } else {\n      callback();\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"horizontal\">\n        <Row>\n          <Col span={12}>\n            <Form.Item\n              label=\"请选择文件\"\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n            >\n              {\n                getFieldDecorator('files', {\n                  rules: [{ required: true, message: '请选择要统计的文件!' }]\n                })(\n                  <Upload\n                    accept=\".xls,.xlsx\"\n                    multiple\n                    fileList={this.state.fileList}\n                    beforeUpload={(file) => {\n                      this.setState(({ fileList }) => {\n                        return { fileList : [...fileList, file] };\n                      });\n                      return false;\n                    }}\n                    onRemove={(file) => {\n                      this.setState(({ fileList }) => {\n                        const index = fileList.indexOf(file);\n                        const newFileList = fileList.slice();\n                        newFileList.splice(index, 1);\n                        return {\n                          fileList: newFileList\n                        };\n                      });\n                    }}\n                  >\n                    <Button>支持文件格式: .xls, .xlsx</Button>\n                  </Upload>\n                )\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Form.Item\n              label='统计周期开始时间'\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('startDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期开始时间' },\n                    { validator: this.compareToEndDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              label=\"统计周期结束时间\"\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('endDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期结束时间' },\n                    { validator: this.compareToStartDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col offset={4}>\n            <Button loading={this.props.loading} type=\"primary\" onClick={this.startStatistic}>\n              {\n                this.props.loading ? '正在统计...': '开始统计'\n              }\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nconst WrapDataForm = Form.create()(DataForm);\n\nexport default WrapDataForm;\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n// import the core library.\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\n// then import echarts modules those you have used manually.\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n// import 'echarts/lib/chart/scatter';\r\n// import 'echarts/lib/chart/radar';\r\n\r\n// import 'echarts/lib/chart/map';\r\n// import 'echarts/lib/chart/treemap';\r\n// import 'echarts/lib/chart/graph';\r\n// import 'echarts/lib/chart/gauge';\r\n// import 'echarts/lib/chart/funnel';\r\n// import 'echarts/lib/chart/parallel';\r\n// import 'echarts/lib/chart/sankey';\r\n// import 'echarts/lib/chart/boxplot';\r\n// import 'echarts/lib/chart/candlestick';\r\n// import 'echarts/lib/chart/effectScatter';\r\n// import 'echarts/lib/chart/lines';\r\n// import 'echarts/lib/chart/heatmap';\r\n\r\n// import 'echarts/lib/component/graphic';\r\n// import 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/polar';\r\n// import 'echarts/lib/component/geo';\r\n// import 'echarts/lib/component/parallel';\r\n// import 'echarts/lib/component/singleAxis';\r\n// import 'echarts/lib/component/brush';\r\n\r\nimport 'echarts/lib/component/title';\r\n\r\n// import 'echarts/lib/component/dataZoom';\r\n// import 'echarts/lib/component/visualMap';\r\n\r\n// import 'echarts/lib/component/markPoint';\r\n// import 'echarts/lib/component/markLine';\r\n// import 'echarts/lib/component/markArea';\r\n\r\n// import 'echarts/lib/component/timeline';\r\nimport 'echarts/lib/component/toolbox';\r\n// import { Rect } from 'echarts/lib/util/graphic';\r\n\r\n// import 'zrender/lib/vml/vml';\r\n\r\nconst titleConfig = {\r\n  left: 'center',\r\n  top: 0,\r\n  textStyle: {\r\n    color: '#000000'\r\n  }\r\n};\r\nconst toolboxConfig = {\r\n  feature: {\r\n    saveAsImage: { show: true }\r\n  },\r\n  right: 40\r\n};\r\nconst legendConfig = {\r\n  left: 40\r\n};\r\nconst styles = {\r\n  margin: '40px 0',\r\n  height: '500px'\r\n};\r\nconst tooltipConifg = {\r\n  trigger: 'axis',\r\n  axisPointer: {\r\n    type: 'cross',\r\n    crossStyle: {\r\n      color: '#999'\r\n    }\r\n  }\r\n};\r\n\r\n\r\nfunction CommonCharts(props) {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title1,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '累计受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '累计受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.totalAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.overallCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title2,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '新增受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '新增受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.newAddedAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.newAddedCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title5,\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '剩余未关',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.graphData.openData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title3,\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            legend: {\r\n              data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n              ...legendConfig\r\n            },\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '需处理受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '比率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '需处理受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleAcceptData\r\n              },\r\n              {\r\n                name: '及时关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleCloseOnTimeRateData\r\n              },\r\n              {\r\n                name: '总体关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row style={{ margin: '40px 0' }}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title4,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '处理时长（天）'\r\n              },\r\n            ],\r\n            legend: {\r\n              data: ['已关闭', '剩余未关'],\r\n              ...legendConfig\r\n            },\r\n            series: [\r\n              {\r\n                name: '已关闭',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.closeAverageHandleTimeData\r\n              },\r\n              {\r\n                name: '剩余未关',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.openAverageHandleTimeData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommonCharts;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n// import the core library.\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\n// then import echarts modules those you have used manually.\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n// import 'echarts/lib/chart/scatter';\r\n// import 'echarts/lib/chart/radar';\r\n\r\n// import 'echarts/lib/chart/map';\r\n// import 'echarts/lib/chart/treemap';\r\n// import 'echarts/lib/chart/graph';\r\n// import 'echarts/lib/chart/gauge';\r\n// import 'echarts/lib/chart/funnel';\r\n// import 'echarts/lib/chart/parallel';\r\n// import 'echarts/lib/chart/sankey';\r\n// import 'echarts/lib/chart/boxplot';\r\n// import 'echarts/lib/chart/candlestick';\r\n// import 'echarts/lib/chart/effectScatter';\r\n// import 'echarts/lib/chart/lines';\r\n// import 'echarts/lib/chart/heatmap';\r\n\r\n// import 'echarts/lib/component/graphic';\r\n// import 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/polar';\r\n// import 'echarts/lib/component/geo';\r\n// import 'echarts/lib/component/parallel';\r\n// import 'echarts/lib/component/singleAxis';\r\n// import 'echarts/lib/component/brush';\r\n\r\nimport 'echarts/lib/component/title';\r\n\r\n// import 'echarts/lib/component/dataZoom';\r\n// import 'echarts/lib/component/visualMap';\r\n\r\n// import 'echarts/lib/component/markPoint';\r\n// import 'echarts/lib/component/markLine';\r\n// import 'echarts/lib/component/markArea';\r\n\r\n// import 'echarts/lib/component/timeline';\r\nimport 'echarts/lib/component/toolbox';\r\n// import { Rect } from 'echarts/lib/util/graphic';\r\n\r\n// import 'zrender/lib/vml/vml';\r\n\r\nimport  { CATEGORIES } from '../constants';\r\n\r\nimport Charts from './CommonCharts';\r\n\r\nconst titleConfig = {\r\n  left: 'center',\r\n  top: 0,\r\n  textStyle: {\r\n    color: '#000000'\r\n  }\r\n};\r\nconst toolboxConfig = {\r\n  feature: {\r\n    saveAsImage: { show: true }\r\n  },\r\n  right: 40\r\n};\r\nconst legendConfig = {\r\n  left: 40\r\n};\r\nconst styles = {\r\n  margin: '40px 0',\r\n  height: '500px'\r\n};\r\nconst tooltipConifg = {\r\n  trigger: 'axis',\r\n  axisPointer: {\r\n    type: 'cross',\r\n    crossStyle: {\r\n      color: '#999'\r\n    }\r\n  }\r\n};\r\n\r\nfunction ChartView(props) {\r\n\r\n  let cityCategoryCloseAverageHandleTimeSeries = [];\r\n  let newAddedCities = [];\r\n  for (let cityName in props.cityGraphData.cityCategoryCloseAverageHandleTimeData) {\r\n    newAddedCities = [\r\n      ...newAddedCities, cityName\r\n    ];\r\n    cityCategoryCloseAverageHandleTimeSeries = [\r\n      ...cityCategoryCloseAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.cityGraphData.cityCategoryCloseAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  let citySecondCategoryOpenAverageHandleTimeSeries = [];\r\n  let openAverageHandleTimeCities = [];\r\n  for (let cityName in props.citySecondCategoryOpenAverageHandleTimeData) {\r\n    openAverageHandleTimeCities = [\r\n      ...openAverageHandleTimeCities, cityName\r\n    ];\r\n    citySecondCategoryOpenAverageHandleTimeSeries = [\r\n      ...citySecondCategoryOpenAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.citySecondCategoryOpenAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Charts graphData={props.areaGraphData} xAxis={props.allAreas}\r\n        title= {{\r\n          title1: \"大区日常维修总体关闭率\",\r\n          title2: \"大区新增维修关闭率\",\r\n          title3: \"大区需处理关闭率\",\r\n          title4: \"大区新增平均处理时长\",\r\n          title5: \"大区剩余未关分布图\",\r\n        }}\r\n        />\r\n      <Charts graphData={props.categoryGraphData} xAxis={props.allCategories}\r\n        title= {{\r\n          title1: \"分类日常维修总体关闭率\",\r\n          title2: \"分类新增维修关闭率\",\r\n          title3: \"分类需处理关闭率\",\r\n          title4: \"分类新增平均处理时长\",\r\n          title5: \"分类剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.cityGraphData} xAxis={props.allCities}\r\n        title={{\r\n          title1: \"各城市日常维修总体关闭率\",\r\n          title2: \"各城市新增维修关闭率\",\r\n          title3: \"各城市需处理关闭率\",\r\n          title4: \"各城市新增平均处理时长\",\r\n          title5: \"各城市剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.projectGraphData} xAxis={props.allProjects}\r\n        title={{\r\n          title1: \"各项目日常维修总体关闭率\",\r\n          title2: \"各项目新增维修关闭率\",\r\n          title3: \"各项目需处理关闭率\",\r\n          title4: \"各项目新增平均处理时长\",\r\n          title5: \"各项目剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.stageGraphData} xAxis={props.allStages}\r\n        title= {{\r\n          title1: \"各项目分期日常维修总体关闭率\",\r\n          title2: \"各项目分期新增维修关闭率\",\r\n          title3: \"各项目分期需处理关闭率\",\r\n          title4: \"各项目分期新增平均处理时长\",\r\n          title5: \"各项目分期剩余未关分布图\",\r\n        }}\r\n        />\r\n      {/* <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: '剩余未关分类图',\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '一级分类',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.categoryOpenData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row> */}\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Row>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各城市日常维修总体关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.allCities,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '累计受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '累计受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#333',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityGraphData.totalAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityGraphData.overallCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n\r\n  //     <Row>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各项目日常维修总体关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.allProjects,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '累计受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '累计受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectGraphData.totalAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectGraphData.overallCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n\r\n  //     <Row>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各项目分期日常维修总体关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.allStages,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 height: 300,\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '累计受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '累计受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.stageGraphData.totalAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.stageGraphData.overallCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n\r\n  //     <Row>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '剩余未关城市分布图',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'item',\r\n  //             formatter: '{b}:{c}({d}%)'\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           series: [\r\n  //             {\r\n  //               name: '城市剩余未关',\r\n  //               type: 'pie',\r\n  //               radius: '60%',\r\n  //               label: {\r\n  //                 formatter: '{b}:{c}({d}%)',\r\n  //                 color: '#000'\r\n  //               },\r\n  //               data: props.cityOpenData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n\r\n  //     <Row>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '剩余未关二级分类分布图',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'item',\r\n  //             formatter: '{b}:{c}({d}%)'\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           series: [\r\n  //             {\r\n  //               name: '二级分类',\r\n  //               type: 'pie',\r\n  //               radius: '60%',\r\n  //               label: {\r\n  //                 formatter: '{b}:{c}({d}%)',\r\n  //                 color: '#000'\r\n  //               },\r\n  //               data: props.secondCategoryOpenData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各城市新增维修关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.cities,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '新增受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '新增受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityNewAddedAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityNewAddedCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '项目新增关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.newAddedProjects,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '新增受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '新增受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectNewAddedAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectNewAddedCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '分期新增关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.newAddedStages,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '新增受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '关闭率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '新增受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.stageNewAddedAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.stageNewAddedCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '新增维修城市分布图',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'item',\r\n  //             formatter: '{b}:{c}({d}%)'\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           series: [\r\n  //             {\r\n  //               name: '城市',\r\n  //               type: 'pie',\r\n  //               radius: '60%',\r\n  //               label: {\r\n  //                 formatter: '{b}:{c}({d}%)',\r\n  //                 color: '#000'\r\n  //               },\r\n  //               data: props.cityNewAddedAcceptData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '新增维修二级分类分布图',\r\n  //             left: 'center',\r\n  //             textStyle: {\r\n  //               color: '#000000'\r\n  //             }\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'item',\r\n  //             formatter: '{b}:{c}({d}%)'\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           series: [\r\n  //             {\r\n  //               name: '城市',\r\n  //               type: 'pie',\r\n  //               radius: '60%',\r\n  //               label: {\r\n  //                 formatter: '{b}:{c}({d}%)',\r\n  //                 color: '#000'\r\n  //               },\r\n  //               data: props.secondCategoryNewAddedAcceptData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各城市需处理关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           legend: {\r\n  //             data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n  //             ...legendConfig\r\n  //           },\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.cities,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '需处理受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '比率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '需处理受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityNeedHandleAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '及时关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityNeedHandleCloseOnTimeRateData\r\n  //             },\r\n  //             {\r\n  //               name: '总体关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityNeedHandleCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '各项目需处理关闭率',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           legend: {\r\n  //             data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n  //             ...legendConfig\r\n  //           },\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.needHandleProjects,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '需处理受理'\r\n  //             },\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '比率',\r\n  //               min: 0,\r\n  //               max: 1\r\n  //             }\r\n  //           ],\r\n  //           series: [\r\n  //             {\r\n  //               name: '需处理受理',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#000',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectNeedHandleAcceptData\r\n  //             },\r\n  //             {\r\n  //               name: '及时关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectNeedHandleCloseOnTimeRateData\r\n  //             },\r\n  //             {\r\n  //               name: '总体关闭率',\r\n  //               type: 'line',\r\n  //               yAxisIndex: 1,\r\n  //               label: {\r\n  //                 show: true,\r\n  //                 color: '#000',\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.projectNeedHandleCloseRateData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '平均处理时长城市分布图',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: props.cities,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '处理时长（天）'\r\n  //             },\r\n  //           ],\r\n  //           legend: {\r\n  //             data: ['已关闭', '剩余未关'],\r\n  //             ...legendConfig\r\n  //           },\r\n  //           series: [\r\n  //             {\r\n  //               name: '已关闭',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#333',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityCloseAverageHandleTimeData\r\n  //             },\r\n  //             {\r\n  //               name: '剩余未关',\r\n  //               type: 'bar',\r\n  //               barMaxWidth: 20,\r\n  //               label: {\r\n  //                 position: 'top',\r\n  //                 color: '#333',\r\n  //                 show: true,\r\n  //                 formatter: '{c}'\r\n  //               },\r\n  //               data: props.cityOpenAverageHandleTimeData\r\n  //             }\r\n  //           ]\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '已关闭维修分类平均处理时长',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: DEFAULT_SECOND_CATEGORIES,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '处理时长（天）'\r\n  //             },\r\n  //           ],\r\n  //           legend: {\r\n  //             data: newAddedCities,\r\n  //             ...legendConfig\r\n  //           },\r\n  //           series: cityCategoryCloseAverageHandleTimeSeries\r\n  //         }}\r\n  //       />\r\n  //     </Row>\r\n  //     <Row style={{margin: '40px 0'}}>\r\n  //       <ReactEchartsCore\r\n  //         style={styles}\r\n  //         echarts={echarts}\r\n  //         option={{\r\n  //           title: {\r\n  //             text: '剩余未关维修分类平均处理时长',\r\n  //             ...titleConfig\r\n  //           },\r\n  //           tooltip: {\r\n  //             trigger: 'axis',\r\n  //             axisPointer: {\r\n  //               type: 'cross',\r\n  //               crossStyle: {\r\n  //                 color: '#999'\r\n  //               }\r\n  //             }\r\n  //           },\r\n  //           toolbox: toolboxConfig,\r\n  //           xAxis: [\r\n  //             {\r\n  //               type: 'category',\r\n  //               data: DEFAULT_SECOND_CATEGORIES,\r\n  //               axisPointer: {\r\n  //                 type: 'shadow'\r\n  //               },\r\n  //               interval: 0,\r\n  //               axisLabel: {\r\n  //                 rotate: 45\r\n  //               }\r\n  //             },\r\n  //           ],\r\n  //           yAxis: [\r\n  //             {\r\n  //               type: 'value',\r\n  //               name: '处理时长（天）'\r\n  //             },\r\n  //           ],\r\n  //           legend: {\r\n  //             data: openAverageHandleTimeCities,\r\n  //             ...legendConfig\r\n  //           },\r\n  //           series: citySecondCategoryOpenAverageHandleTimeSeries\r\n  //         }}\r\n  //       />\r\n  //     </Row> */}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default ChartView;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport {\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  CATEGORIES,\r\n  KEY_TICKET_TOTAL\r\n} from '../constants';\r\n\r\nfunction ProjectTable(props) {\r\n  const projectColumn = (\r\n    <Table.Column\r\n      dataIndex={KEY_PROJECT_NAME}\r\n      title=\"名称\"\r\n      key={KEY_PROJECT_NAME}\r\n      width={300}\r\n    />\r\n  );\r\n\r\n  const otherColumns = [KEY_STATISTIC_ITEM,\r\n    ...CATEGORIES, KEY_TICKET_TOTAL].map((item) => (\r\n    <Table.Column\r\n      dataIndex={item}\r\n      title={item}\r\n      key={item}\r\n      width={300}\r\n    />\r\n  ));\r\n\r\n  let data = props.data.filter(item => {\r\n    if (props.filteredProjects.length > 0 && props.filteredItems.length > 0) {\r\n      return props.filteredProjects.indexOf(item[KEY_PROJECT_NAME]) !== -1 &&\r\n        props.filteredItems.indexOf(item[KEY_STATISTIC_ITEM]) !== -1;\r\n    } else if (props.filteredProjects.length === 0 && props.filteredItems.length > 0) {\r\n      return props.filteredItems.indexOf(item[KEY_STATISTIC_ITEM]) !== -1;\r\n    } else if (props.filteredProjects.length > 0 && props.filteredItems.length === 0) {\r\n      return props.filteredProjects.indexOf(item[KEY_PROJECT_NAME]) !== -1;\r\n    } else {\r\n      return true;\r\n    }\r\n  });\r\n  return (\r\n    <Table\r\n      title={(currentPageData) => { return props.title }}\r\n      dataSource={data}\r\n      pagination={{ pageSize: 50 }}\r\n      scroll={{ y: 400 }}\r\n      size='small'\r\n    >\r\n      {projectColumn}\r\n      {otherColumns}\r\n    </Table>\r\n  );\r\n}\r\n\r\nProjectTable.defaultProps = {\r\n  filteredProjects: []\r\n}\r\n\r\nexport default ProjectTable;\r\n","import {\r\n  KEY_TICKET_TOTAL,\r\n  NEW_ADD_CLOSE_RATE,\r\n  REMAIN_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  RESPONSE_IN_30_MIN_RATE,\r\n  RESPONSE_IN_30_HOUR_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE,\r\n  STAGES,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  STATISTIC_ITEMS,\r\n  DEFAULT_SECOND_CATEGORIES,\r\n  CATEGORIES,\r\n  RATE_STATISTIC_ITEMS\r\n} from './constants';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nexport function filterProjectName(projectName) {\r\n  let reg = /\\(.*?\\)|（.*?）/;\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function parseTime(timeString) {\r\n  let time = timeString.match(/\\d+/g);\r\n  let day = 0, hour = 0, min = 0;\r\n  if (time && time.length > 0) {\r\n    day = window.parseInt(time[0]);\r\n    hour = window.parseInt(time[1]);\r\n    min = window.parseInt(time[2]);\r\n  }\r\n  return { day, hour, min };\r\n}\r\n\r\nexport function filterProject(projectName, reg) {\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function filterProjectStage(projectName) {\r\n  let filteredName = null;\r\n  for (let stage of STAGES) {\r\n    if (projectName.indexOf(stage) != -1) {\r\n      filteredName = projectName.substring(0, projectName.indexOf(stage));\r\n      return filteredName;\r\n    }\r\n  }\r\n  return projectName;\r\n}\r\n\r\nexport function formatToTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToRateTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of RATE_STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToAreaTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let statisticItem of STATISTIC_ITEMS) {\r\n    let rowData = {};\r\n    rowKey++;\r\n    rowData.key = rowKey;\r\n    rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n    for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n      rowData[category] = data[category][statisticItem]\r\n    }\r\n    tableData.push(rowData);\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function readExcelData (fileList) {\r\n  return new Promise((resolve, reject) => {\r\n    let fileReader = new FileReader();\r\n    let data = [];\r\n\r\n    let readFile = (index) => {\r\n      if (index < fileList.length) {\r\n        fileReader.onload = (event) => {\r\n          let workbook = XLSX.read(event.target.result, { type: 'binary' });\r\n          let sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n          data = [...data, ...XLSX.utils.sheet_to_json(sheet, { blankrows: false })];\r\n          readFile(index + 1);\r\n        }\r\n        fileReader.readAsBinaryString(fileList[index]);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    };\r\n    readFile(0);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, Select, Button } from 'antd';\r\nimport ProjectTable from './ProjectTable';\r\nimport {\r\n  STATISTIC_PERIOD_ADD,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_THIS_YEAR_TOTAL,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_BEFORE_PERIOD_NEED_HANDLE,\r\n  STATISTIC_BEFORE_PERIOD_TOTAL,\r\n  STATISTIC_PERIOD_RATE,\r\n  CATEGORIES,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  KEY_TICKET_TOTAL,\r\n  STATISTIC_ITEMS\r\n} from '../constants';\r\nimport {\r\n  formatToTable,\r\n  formatToRateTable\r\n} from '../utils';\r\nimport XLSX from 'xlsx';\r\nimport moment from 'moment';\r\n\r\nclass ProjectView extends React.Component {\r\n  static defaultProps = {\r\n    data: {},\r\n    projects: [],\r\n    items: STATISTIC_ITEMS,\r\n    name: 'statistic'\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredProjects: [],\r\n      filteredItems: [],\r\n      loading: false\r\n    }\r\n    this.exportData = this.exportData.bind(this);\r\n  }\r\n\r\n  filterProjects = (projects) => {\r\n    this.setState({\r\n      filteredProjects: projects.length > 0 ? projects : []\r\n    })\r\n  }\r\n\r\n  filterItems = (items) => {\r\n    this.setState({\r\n      filteredItems: items.length > 0 ? items : []\r\n    });\r\n  }\r\n\r\n  exportData() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    let header = [KEY_PROJECT_NAME, KEY_STATISTIC_ITEM, ...CATEGORIES, KEY_TICKET_TOTAL];\r\n    let sheet1 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.periodNewAddedResult), {\r\n      header: header\r\n    });\r\n    let sheet2 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearBeforePeriodResult), {\r\n      header: header\r\n    });\r\n    let sheet3 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearBeforePeriodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet4 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet5 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.lastYearBeforePeriodResult), {\r\n      header: header\r\n    });\r\n    let sheet6 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.lastYearBeforePeriodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet7 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.beforePeriodNeedHandleResult), {\r\n      header: header\r\n    });\r\n    let sheet8 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.periodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet9 = XLSX.utils.json_to_sheet(formatToRateTable(this.props.data.rateResult), {\r\n      header: header\r\n    });\r\n    let workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, sheet1, STATISTIC_PERIOD_ADD);\r\n    XLSX.utils.book_append_sheet(workbook, sheet2, STATISTIC_BEFORE_PERIOD_REMAIN);\r\n    XLSX.utils.book_append_sheet(workbook, sheet3, STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet4, STATISTIC_THIS_YEAR_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet5, STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN);\r\n    XLSX.utils.book_append_sheet(workbook, sheet6, STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet7, STATISTIC_BEFORE_PERIOD_NEED_HANDLE);\r\n    XLSX.utils.book_append_sheet(workbook, sheet8, STATISTIC_BEFORE_PERIOD_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet9, STATISTIC_PERIOD_RATE)\r\n    XLSX.writeFile(workbook, this.props.name + '-' + moment(Date.now()).format('YYYY-MM-DD-HH-MM-SS') + '.xlsx')\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                label='请选择要过滤的项目'\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 16 }}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: '100%' }}\r\n                  onChange={this.filterProjects}\r\n                >\r\n                  {\r\n                    this.props.projects.map((project) => (\r\n                      <Select.Option key={project}>{project}</Select.Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button loading={this.state.loading} onClick={this.exportData}>导出数据</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                label=\"请选择要过滤的统计项目\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 16 }}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: '100%' }}\r\n                  onChange={this.filterItems}\r\n                >\r\n                  {\r\n                    this.props.items.map((item) => (\r\n                      <Select.Option key={item}>{item}</Select.Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Row>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_ADD}\r\n              data={formatToTable(this.props.data.periodNewAddedResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_NEED_HANDLE}\r\n              data={formatToTable(this.props.data.beforePeriodNeedHandleResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.thisYearBeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_THIS_YEAR_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_TOTAL}\r\n              data={formatToTable(this.props.data.periodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_RATE}\r\n              data={formatToRateTable(this.props.data.rateResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectView;\r\n","import {\r\n  COL_REPORT_TIME,\r\n  COL_OVERTIME_WARN,\r\n  COL_PROJECT_STAGE,\r\n  COL_FIRST_CLASS,\r\n  COL_CURRENT_STATUS,\r\n  COL_PAUSE,\r\n  COL_CLOSE_TIME_1,\r\n  COL_CLOSE_TIME_2,\r\n  COL_CLOSE_TIME_3,\r\n  TICKET_NOT_RESPONSED,\r\n  KEY_TICKET_TOTAL,\r\n  TICKET_STATUS,\r\n  CATEGORIES,\r\n  STATISTIC_ITEMS,\r\n  TICKET_SYSTEM_COUNT,\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_VALIDATE,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  TICKET_CLOSE_ON_TIME,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME,\r\n  TICKET_CLOSE_HANDLE_TIME_0_7,\r\n  TICKET_CLOSE_HANDLE_TIME_7_15,\r\n  TICKET_CLOSE_HANDLE_TIME_15_30,\r\n  TICKET_CLOSE_HANDLE_TIME_30_60,\r\n  TICKET_CLOSE_HANDLE_TIME_OVER_60,\r\n  TICKET_OPEN_HANDLE_TIME_0_7,\r\n  TICKET_OPEN_HANDLE_TIME_7_15,\r\n  TICKET_OPEN_HANDLE_TIME_15_30,\r\n  TICKET_OPEN_HANDLE_TIME_30_60,\r\n  TICKET_OPEN_HANDLE_TIME_OVER_60,\r\n  NEW_ADD_CLOSE_RATE,\r\n  REMAIN_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE,\r\n  CATEGORY_UNCLASSIFY,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  RATE_STATISTIC_ITEMS,\r\n  COL_DUTY_WORKER,\r\n  CONTENT_UNKNOWN,\r\n} from '../constants';\r\n\r\nimport moment from 'moment';\r\n\r\nexport const initStatisticItem = () => {\r\n  let map = {};\r\n  for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n    map[category] = {};\r\n    for (let itemName of STATISTIC_ITEMS) {\r\n      map[category][itemName] = 0;\r\n    }\r\n  }\r\n  return map;\r\n}\r\n\r\nexport const initRate = () => {\r\n  let map = {};\r\n  for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n    map[category] = {};\r\n    for (let itemName of RATE_STATISTIC_ITEMS) {\r\n      map[category][itemName] = 0;\r\n    }\r\n  }\r\n  return map;\r\n}\r\n\r\nexport const getCategory = ticket => ticket[COL_FIRST_CLASS] || CATEGORY_UNCLASSIFY;\r\n\r\nexport const getItem = colContent => colContent || CONTENT_UNKNOWN;\r\n\r\nexport const formatStageToTable = (data) => {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nconst STAGE = /\\d*期/;\r\n\r\nexport function filterProjectName(name) {\r\n  let filteredName = name;\r\n  if (name.match(STAGE)) {\r\n    filteredName = name.substring(0, name.match(STAGE).index);\r\n  }\r\n  // name.replace(STAGE, '');\r\n  return filteredName;\r\n}\r\n\r\nconst statisticCloseHandleTime = (ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration) => {\r\n  let closeHandleTime = moment.duration(ticketCloseTime.diff(ticketReportTime))\r\n    .subtract(ticketPauseDuration, 'hours').as('days');\r\n  ticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n    closeHandleTime;\r\n\r\n  if (closeHandleTime < 7) {\r\n    ticketStatistic[TICKET_CLOSE_HANDLE_TIME_0_7]++;\r\n  } else if (closeHandleTime < 15) {\r\n    ticketStatistic[TICKET_CLOSE_HANDLE_TIME_7_15]++;\r\n  } else if (closeHandleTime < 30) {\r\n    ticketStatistic[TICKET_CLOSE_HANDLE_TIME_15_30]++;\r\n  } else if (closeHandleTime < 60) {\r\n    ticketStatistic[TICKET_CLOSE_HANDLE_TIME_30_60]++;\r\n  } else {\r\n    ticketStatistic[TICKET_CLOSE_HANDLE_TIME_OVER_60]++;\r\n  }\r\n}\r\n\r\nconst statisticOpenHandleTime = (ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration) => {\r\n  let openHandleTime = moment.duration(moment(closeEndTime).diff(ticketReportTime))\r\n    .subtract(ticketPauseDuration, 'hours').as('days');\r\n  ticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n    openHandleTime;\r\n\r\n  if (openHandleTime < 7) {\r\n    ticketStatistic[TICKET_OPEN_HANDLE_TIME_0_7]++;\r\n  } else if (openHandleTime < 15) {\r\n    ticketStatistic[TICKET_OPEN_HANDLE_TIME_7_15]++;\r\n  } else if (openHandleTime < 30) {\r\n    ticketStatistic[TICKET_OPEN_HANDLE_TIME_15_30]++;\r\n  } else if (openHandleTime < 60) {\r\n    ticketStatistic[TICKET_OPEN_HANDLE_TIME_30_60]++;\r\n  } else {\r\n    ticketStatistic[TICKET_OPEN_HANDLE_TIME_OVER_60]++;\r\n  }\r\n}\r\n\r\n// 统计周期内新增\r\nexport const statisticPeriodNewAddedTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 关闭 + 剩余未关\r\n    if (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.COMMENTED ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      statisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED || ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus === TICKET_STATUS.NEW) || ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计时间-受理时间-累计暂停时长\r\n      statisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus === TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留\r\nexport const statisticThisYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      statisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED || ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus === TICKET_STATUS.NEW) || ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      statisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus === TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留累计\r\nexport const statisticThisYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计周期）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime &&\r\n        ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n  }\r\n\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  return dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留\r\nexport const statisticLastYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      statisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED || ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      statisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus === TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留累计\r\nexport const statisticLastYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      statisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED || ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      statisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus === TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 本年度统计周期累计\r\nexport const statisticThisYearTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let ticket of tickets) {\r\n    let name = getItem(ticket[col]);\r\n    if (dataMap[name] == null) {\r\n      dataMap[name] = initStatisticItem();\r\n    }\r\n    let ticketCategory = getCategory(ticket);\r\n    let ticketStatistic = dataMap[name][ticketCategory];\r\n    let ticketStatus = ticket[COL_CURRENT_STATUS];\r\n    let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n    let ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n    let ticketCloseTime = moment(ticket[COL_CLOSE_TIME_1] || ticket[COL_CLOSE_TIME_2] ||\r\n      ticket[COL_CLOSE_TIME_3]);\r\n\r\n    // 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n    // （关单时间在统计开始日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED ||\r\n      ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED ||\r\n        ticketStatus === TICKET_STATUS.FORCE_CLOSE || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED) && ticketCloseTime >= closeStartTime)) {\r\n      ticketStatistic[TICKET_ACCEPT]++;\r\n    }\r\n\r\n    // 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n    if ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n      ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n      ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n      ticketStatistic[TICKET_CLOSE]++;\r\n\r\n      // 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n      if (ticket[COL_OVERTIME_WARN] == null) {\r\n        ticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n      }\r\n\r\n      // 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n      statisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n    //    + 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n    if ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n      ticketStatus === TICKET_STATUS.WORK_FINISHED || ticketStatus === TICKET_STATUS.DROP_IN ||\r\n      ticketStatus === TICKET_STATUS.WORK_DOING ||\r\n      ticketStatus === TICKET_STATUS.SOLUTION_APPROVE || ticketStatus === TICKET_STATUS.DISPATCHED ||\r\n      ticketStatus === TICKET_STATUS.NEW) ||\r\n      ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n        ticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n        ticketCloseTime > closeEndTime)) {\r\n      ticketStatistic[TICKET_OPEN]++;\r\n\r\n      // 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n      statisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n    }\r\n\r\n    // 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n    if (ticketPauseDuration > 0) {\r\n      ticketStatistic[TICKET_PAUSE]++;\r\n    }\r\n\r\n    // 正常关闭 = 已关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSED &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n    }\r\n\r\n    // 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n    if (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n      (ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n      ticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n    }\r\n\r\n    // 未响应 = 已分派+新建\r\n    if (ticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW) {\r\n      ticketStatistic[TICKET_NOT_RESPONSED]++;\r\n    }\r\n\r\n    // 无效 = 无效\r\n    if (ticketStatus === TICKET_STATUS.INVALID) {\r\n      ticketStatistic[TICKET_INVALID]++;\r\n    }\r\n  }\r\n\r\n  // 合计\r\n  for (let name in dataMap) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      for (let category of CATEGORIES) {\r\n        dataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 计算平均关闭时长和未关时长\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 统计周期前需处理\r\nexport const statisticBeforePeriodNeedHandleResult = (array, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let result of array) {\r\n    for (let name in result) {\r\n      if (dataMap[name] == null) {\r\n        dataMap[name] = initStatisticItem();\r\n      }\r\n      for (let category in dataMap[name]) {\r\n        for (let item of STATISTIC_ITEMS) {\r\n          if (item === TICKET_CLOSE_PROCESS_TIME) {\r\n            let ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n            let ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n            dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n              ticketCloseCount * ticketCloseProcessTime;\r\n          } else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n            let ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n            let ticketOpenCount = result[name][category][TICKET_OPEN];\r\n            dataMap[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n              ticketOpenCount * ticketOpenProcessTime;\r\n          }\r\n          else {\r\n            dataMap[name][category][item] +=\r\n              result[name][category][item];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // get average process time\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n  return dataMap;\r\n}\r\n\r\n// 统计周期累计\r\nexport const statisticPeriodTotalResult = (array, allItems) => {\r\n  let dataMap = {};\r\n  for (let name of allItems) {\r\n    dataMap[name] = initStatisticItem();\r\n  }\r\n  for (let result of array) {\r\n    for (let name in result) {\r\n      if (dataMap[name] == null) {\r\n        dataMap[name] = initStatisticItem();\r\n      }\r\n      for (let category in dataMap[name]) {\r\n        for (let item of STATISTIC_ITEMS) {\r\n          if (item === TICKET_CLOSE_PROCESS_TIME) {\r\n            let ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n            let ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n            dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n              ticketCloseCount * ticketCloseProcessTime;\r\n          } else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n            let ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n            let ticketOpenCount = result[name][category][TICKET_OPEN];\r\n            dataMap[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n              ticketOpenCount * ticketOpenProcessTime;\r\n          }\r\n          else {\r\n            dataMap[name][category][item] +=\r\n              result[name][category][item];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // get average process time\r\n  for (let name in dataMap) {\r\n    for (let category in dataMap[name]) {\r\n      let ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n      let ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n      dataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n        ticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n      let ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n      let ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n      dataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n        ticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n    }\r\n  }\r\n\r\n  return dataMap;\r\n}\r\n\r\nexport const statisticRate = (statisticMap, statisticItem, rateMap) => {\r\n  for (let name in statisticMap) {\r\n    for (let category in rateMap[name]) {\r\n      if (statisticMap[name][category][TICKET_ACCEPT] > 0) {\r\n        if (statisticItem === NEW_ADD_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === REMAIN_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === OVERALL_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === CLOSE_ON_TIME_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE_ON_TIME] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        } else if (statisticItem === TOTAL_OVERALL_CLOSE_RATE) {\r\n          rateMap[name][category][statisticItem] =\r\n            (statisticMap[name][category][TICKET_CLOSE] /\r\n              statisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const statistc = (periodTickets, beforePeriodTickets, thisYearTotalTickets,\r\n  lastYearBeforePeriodTickets, startTime, endTime, col, allItems) => {\r\n  let yearStartTime = moment(startTime).set({ month: 0, date: 1, hour: 0, minute: 0, second: 0 });\r\n  let data = {};\r\n  data.periodNewAddedResult = statisticPeriodNewAddedTickets(periodTickets,\r\n    startTime, endTime, col, allItems);\r\n  data.thisYearBeforePeriodResult = statisticThisYearBeforePeriodTickets(beforePeriodTickets,\r\n    startTime, endTime, col, allItems);\r\n  data.thisYearBeforePeriodTotalResult = statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\r\n    startTime, endTime, col, allItems);\r\n  data.lastYearBeforePeriodResult = statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\r\n    startTime, endTime, col, allItems);\r\n  data.lastYearBeforePeriodTotalResult = statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\r\n    yearStartTime, endTime, col, allItems);\r\n  data.thisYearTotalResult = statisticThisYearTotalTickets(thisYearTotalTickets,\r\n    yearStartTime, endTime, col, allItems);\r\n  data.beforePeriodNeedHandleResult = statisticBeforePeriodNeedHandleResult([\r\n    data.periodNewAddedResult, data.thisYearBeforePeriodResult,\r\n    data.lastYearBeforePeriodResult], allItems);\r\n  data.periodTotalResult = statisticPeriodTotalResult([\r\n    data.lastYearBeforePeriodTotalResult,\r\n    data.thisYearTotalResult\r\n  ], allItems);\r\n  data.rateResult = {};\r\n  for (let name of allItems) {\r\n    data.rateResult[name] = initRate();\r\n  }\r\n  statisticRate(data.periodNewAddedResult, NEW_ADD_CLOSE_RATE, data.rateResult);\r\n  statisticRate(data.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, data.rateResult);\r\n  statisticRate(data.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, data.rateResult);\r\n  statisticRate(data.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, data.rateResult);\r\n  statisticRate(data.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, data.rateResult);\r\n\r\n  return data;\r\n}\r\n\r\nexport const formatGraphData = (data, allItems) => {\r\n  let graphData = {\r\n    totalAcceptData: [],\r\n    overallCloseRateData: [],\r\n    newAddedAcceptData: [],\r\n    newAddedCloseRateData: [],\r\n    needHandleAcceptData: [],\r\n    needHandleCloseOnTimeRateData: [],\r\n    needHandleCloseRateData: [],\r\n    openData: [],\r\n    closeAverageHandleTimeData: [],\r\n    openAverageHandleTimeData: []\r\n  };\r\n  for (let name of allItems) {\r\n    graphData.totalAcceptData = [\r\n      ...graphData.totalAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.periodTotalResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.overallCloseRateData = [\r\n      ...graphData.overallCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[name][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.newAddedAcceptData = [\r\n      ...graphData.newAddedAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.newAddedCloseRateData = [\r\n      ...graphData.newAddedCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[name][KEY_TICKET_TOTAL][NEW_ADD_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.needHandleAcceptData = [\r\n      ...graphData.needHandleAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.beforePeriodNeedHandleResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.needHandleCloseOnTimeRateData = [\r\n      ...graphData.needHandleCloseOnTimeRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[name][KEY_TICKET_TOTAL][CLOSE_ON_TIME_RATE]\r\n      }\r\n    ];\r\n    graphData.needHandleCloseRateData = [\r\n      ...graphData.needHandleCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[name][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.closeAverageHandleTimeData = [\r\n      ...graphData.closeAverageHandleTimeData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_CLOSE_PROCESS_TIME]\r\n      }\r\n    ];\r\n    graphData.openAverageHandleTimeData = [\r\n      ...graphData.openAverageHandleTimeData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_OPEN_PROCESS_TIME]\r\n      }\r\n    ];\r\n    graphData.openData = [\r\n      ...graphData.openData,\r\n      {\r\n        name: name,\r\n        value: data.periodTotalResult[name][KEY_TICKET_TOTAL][TICKET_OPEN]\r\n      }\r\n    ]\r\n  }\r\n\r\n  return graphData;\r\n}\r\n\r\nexport const formatCategoryGraphData = (data, allItems, area) => {\r\n  let graphData = {\r\n    totalAcceptData: [],\r\n    overallCloseRateData: [],\r\n    newAddedAcceptData: [],\r\n    newAddedCloseRateData: [],\r\n    needHandleAcceptData: [],\r\n    needHandleCloseOnTimeRateData: [],\r\n    needHandleCloseRateData: [],\r\n    openData: [],\r\n    closeAverageHandleTimeData: [],\r\n    openAverageHandleTimeData: []\r\n  };\r\n  for (let name of allItems) {\r\n    graphData.totalAcceptData = [\r\n      ...graphData.totalAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.periodTotalResult[area][name][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.overallCloseRateData = [\r\n      ...graphData.overallCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[area][name][OVERALL_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.newAddedAcceptData = [\r\n      ...graphData.newAddedAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[area][name][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.newAddedCloseRateData = [\r\n      ...graphData.newAddedCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[area][name][NEW_ADD_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.needHandleAcceptData = [\r\n      ...graphData.needHandleAcceptData,\r\n      {\r\n        name: name,\r\n        value: data.beforePeriodNeedHandleResult[area][name][TICKET_ACCEPT]\r\n      }\r\n    ];\r\n    graphData.needHandleCloseOnTimeRateData = [\r\n      ...graphData.needHandleCloseOnTimeRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[area][name][CLOSE_ON_TIME_RATE]\r\n      }\r\n    ];\r\n    graphData.needHandleCloseRateData = [\r\n      ...graphData.needHandleCloseRateData,\r\n      {\r\n        name: name,\r\n        value: data.rateResult[area][name][OVERALL_CLOSE_RATE]\r\n      }\r\n    ];\r\n    graphData.closeAverageHandleTimeData = [\r\n      ...graphData.closeAverageHandleTimeData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[area][name][TICKET_CLOSE_PROCESS_TIME]\r\n      }\r\n    ];\r\n    graphData.openAverageHandleTimeData = [\r\n      ...graphData.openAverageHandleTimeData,\r\n      {\r\n        name: name,\r\n        value: data.periodNewAddedResult[area][name][TICKET_OPEN_PROCESS_TIME]\r\n      }\r\n    ];\r\n    graphData.openData = [\r\n      ...graphData.openData,\r\n      {\r\n        name: name,\r\n        value: data.periodTotalResult[area][name][TICKET_OPEN]\r\n      }\r\n    ]\r\n  }\r\n\r\n  return graphData;\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport {\n  KEY_REPORT_TIME,\n  COL_PROJECT_STAGE,\n  COL_PROJECT,\n  COL_CITY_COMPANY,\n  COL_AREA,\n  COL_REPORT_TIME,\n  CATEGORIES,\n  COL_DUTY_WORKER\n} from './constants';\n\nimport { Row, Col, Tabs } from 'antd';\nimport DataForm from './components/DataForm';\nimport ChartView from './components/ChartView';\nimport ProjectView from './components/ProjectView';\n\nimport {\n  readExcelData\n} from './utils';\n\nimport { connect } from 'react-redux';\nimport { addCategories } from './store/actions';\n\nimport * as Util from './functions/utils';\n\nimport MainView from './components/MainView';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stageGraphData: {},\n      cityGraphData: {},\n      projectGraphData: {},\n      areaGraphData: {},\n      categoryGraphData: {}\n    }\n  }\n\n  start = (fileList, startTime, endTime) => {\n    const { addCategories } = this.props;\n    this.setState({ loading: true });\n    readExcelData(fileList).then((data) => {\n      let allStages = [], allProjects = [], allCities = [], allAreas = [], allWorkers = [];\n      // get all categories and ticket states\n      for (let ticket of data) {\n        // get all stages\n        let stage = Util.getItem(ticket[COL_PROJECT_STAGE]);\n        if (allStages.indexOf(stage) === -1) {\n          allStages = [\n            ...allStages,\n            stage\n          ];\n        }\n        // get all projects\n        let project = Util.getItem(ticket[COL_PROJECT]);\n        if (allProjects.indexOf(project) === -1) {\n          allProjects = [\n            ...allProjects,\n            project\n          ];\n        }\n        // get all cities\n        let city = Util.getItem(ticket[COL_CITY_COMPANY]);\n        console.log(city);\n        if (allCities.indexOf(city) === -1) {\n          allCities = [\n            ...allCities,\n            city\n          ];\n        }\n        // get all area\n        let area = Util.getItem(ticket[COL_AREA]);\n        if (allAreas.indexOf(area) === -1) {\n          allAreas = [\n            ...allAreas,\n            area\n          ];\n        }\n        // get all workers\n        let worker = Util.getItem(ticket[COL_DUTY_WORKER]);\n        if (allWorkers.indexOf(worker) === -1) {\n          allWorkers = [\n            ...allWorkers,\n            worker\n          ];\n        }\n      }\n\n      let allCategories = CATEGORIES;\n\n      this.setState({\n        allStages,\n        allProjects,\n        allCities,\n        allAreas,\n        allCategories,\n        allWorkers\n      });\n\n      addCategories(allCategories);\n\n      let yearStartTime = moment(startTime).set({ month: 0, date: 1, hour: 0, minute: 0, second: 0 });\n      let periodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime >= startTime && ticketReportTime <= endTime;\n      });\n      let beforePeriodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime >= yearStartTime && ticketReportTime < startTime;\n      });\n      let thisYearTotalTickets = data.filter((ticket) => {\n        let reportTime = moment(ticket[KEY_REPORT_TIME]);\n        return reportTime <= endTime && reportTime >= yearStartTime;\n      });\n      let lastYearBeforePeriodTickets = data.filter(ticket => {\n        let ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n        return ticketReportTime < yearStartTime\n      });\n\n      // 统计负责维保工程师\n      let workerData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n        lastYearBeforePeriodTickets, startTime, endTime, COL_DUTY_WORKER, allWorkers);\n      this.setState({\n        workerData\n      });\n\n      // 统计分期\n      let stageData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n        lastYearBeforePeriodTickets, startTime, endTime, COL_PROJECT_STAGE, allStages)\n      this.setState({\n        stageData\n      });\n\n      // 统计项目\n      let projectData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n        lastYearBeforePeriodTickets, startTime, endTime, COL_PROJECT, allProjects)\n      this.setState({\n        projectData\n      });\n\n      // 统计城市\n      let cityData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n        lastYearBeforePeriodTickets, startTime, endTime, COL_CITY_COMPANY, allCities)\n      this.setState({\n        cityData\n      });\n\n      // 统计大区\n      let areaData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n        lastYearBeforePeriodTickets, startTime, endTime, COL_AREA, allAreas)\n      this.setState({\n        areaData\n      });\n\n      // 画图\n      let stageGraphData = Util.formatGraphData(stageData, allStages);\n      this.setState({\n        stageGraphData\n      })\n\n      let projectGraphData = Util.formatGraphData(projectData, allProjects);\n      this.setState({\n        projectGraphData\n      });\n\n      let cityGraphData = Util.formatGraphData(cityData, allCities);\n      this.setState({\n        cityGraphData\n      });\n\n      let areaGraphData = Util.formatGraphData(areaData, allAreas);\n      this.setState({\n        areaGraphData\n      });\n\n      // 统计分类分布图\n      let categoryGraphData = Util.formatCategoryGraphData(areaData, allCategories, allAreas[0]);\n      this.setState({\n        categoryGraphData\n      });\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text--center heading\">统计辅助工具</h2>\n        <DataForm\n          onStart={this.start}\n          loading={this.state.loading}\n        />\n        <Row style={{ margin: '40px 0' }}>\n          <Col span={22} offset={1}>\n            <Tabs type=\"card\">\n              <Tabs.TabPane tab=\"统计图\" key=\"统计图\">\n                <ChartView\n                  stageGraphData={this.state.stageGraphData}\n                  projectGraphData={this.state.projectGraphData}\n                  cityGraphData={this.state.cityGraphData}\n                  areaGraphData={this.state.areaGraphData}\n                  categoryGraphData={this.state.categoryGraphData}\n                  allStages={this.state.allStages}\n                  allProjects={this.state.allProjects}\n                  allCities={this.state.allCities}\n                  allAreas={this.state.allAreas}\n                  allCategories={this.state.allCategories}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"大区\" key=\"大区\">\n                <ProjectView\n                  data={this.state.areaData}\n                  projects={this.state.allAreas}\n                  name=\"大区\"\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"城市\" key=\"城市\">\n                <ProjectView\n                  data={this.state.cityData}\n                  projects={this.state.allCities}\n                  name=\"城市\"\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"项目\" key=\"项目\">\n                <ProjectView\n                  data={this.state.projectData}\n                  projects={this.state.allProjects}\n                  name=\"项目\"\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"分期\" key=\"分期\">\n                <ProjectView\n                  data={this.state.stageData}\n                  projects={this.state.allStages}\n                  name=\"项目分期\"\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"工程师\" key=\"工程师\">\n                <ProjectView\n                  data={this.state.workerData}\n                  projects={this.state.allWorkers}\n                  name=\"工程师\"\n                />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addCategories,\n}\n\nconst ConnectedApp = connect(null, mapDispatchToProps)(App);\n\nexport default ConnectedApp;\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES\r\n} from '../action-types';\r\n\r\nexport const addCategory = category => ({\r\n  type: ADD_CATEGORY,\r\n  payload: {\r\n    category\r\n  }\r\n});\r\n\r\nexport const addCategories = categories => ({\r\n  type: ADD_CATEGORIES,\r\n  payload: {\r\n    categories\r\n  }\r\n});\r\n","export const ADD_CATEGORY = 'ADD_CATEGORY';\r\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';\r\nexport const ADD_AREAS = 'ADD_AREAS';\r\n","import { combineReducers } from 'redux';\r\nimport allCategories from './all-categories';\r\nimport allAreas from './all-areas';\r\n\r\nconst reducer = combineReducers({\r\n  allCategories,\r\n  allAreas\r\n});\r\n\r\nexport default reducer;\r\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY:\r\n      const { category } = action.payload;\r\n      return [\r\n        ...state,\r\n        category\r\n      ];\r\n    case ADD_CATEGORIES:\r\n      const { categories } = action.payload;\r\n      return [\r\n        ...state,\r\n        ...categories\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_AREAS\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_AREAS:\r\n      const { areas } = action.payload;\r\n      return [\r\n        ...state,\r\n        areas\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LocaleProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <LocaleProvider locale={zh_CN}>\n      <App />\n    </LocaleProvider>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}